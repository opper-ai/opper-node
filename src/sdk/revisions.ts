/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { functionsRevisionsList } from "../funcs/functionsRevisionsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Revisions extends ClientSDK {
  /**
   * List Function Revisions
   *
   * @remarks
   * Get all revisions for a function with pagination
   *
   * Returns a list of revisions for the function with the given function id
   * revisions are sorted by created_at in descending order ergo the latest revision is the first one
   */
  async list(
    functionId: string,
    offset?: number | null | undefined,
    limit?: number | null | undefined,
    options?: RequestOptions,
  ): Promise<models.PaginatedResponseListFunctionRevisionResponse> {
    return unwrapAsync(functionsRevisionsList(
      this,
      functionId,
      offset,
      limit,
      options,
    ));
  }
}
