/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tracesGet } from "../funcs/tracesGet.js";
import { tracesList } from "../funcs/tracesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Traces extends ClientSDK {
  /**
   * List Traces
   *
   * @remarks
   * List traces
   */
  async list(
    name?: string | null | undefined,
    offset?: number | undefined,
    limit?: number | undefined,
    options?: RequestOptions,
  ): Promise<models.PaginatedResponseListTracesResponse> {
    return unwrapAsync(tracesList(
      this,
      name,
      offset,
      limit,
      options,
    ));
  }

  /**
   * Get Trace
   *
   * @remarks
   * Get a trace by its id
   */
  async get(
    traceId: string,
    options?: RequestOptions,
  ): Promise<models.GetTraceResponse> {
    return unwrapAsync(tracesGet(
      this,
      traceId,
      options,
    ));
  }
}
