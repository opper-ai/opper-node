/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { spansCreate } from "../funcs/spansCreate.js";
import { spansDelete } from "../funcs/spansDelete.js";
import { spansGet } from "../funcs/spansGet.js";
import { spansSaveExamples } from "../funcs/spansSaveExamples.js";
import { spansUpdate } from "../funcs/spansUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Spans extends ClientSDK {
  /**
   * Create Span
   *
   * @remarks
   * Create a new span
   */
  async create(
    request: models.CreateSpanRequest,
    options?: RequestOptions,
  ): Promise<models.CreateSpanResponse> {
    return unwrapAsync(spansCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Span
   *
   * @remarks
   * Get a span
   */
  async get(
    spanId: string,
    options?: RequestOptions,
  ): Promise<models.GetSpanResponse> {
    return unwrapAsync(spansGet(
      this,
      spanId,
      options,
    ));
  }

  /**
   * Update Span
   *
   * @remarks
   * Update a span
   */
  async update(
    spanId: string,
    updateSpanRequest: models.UpdateSpanRequest,
    options?: RequestOptions,
  ): Promise<models.UpdateSpanResponse> {
    return unwrapAsync(spansUpdate(
      this,
      spanId,
      updateSpanRequest,
      options,
    ));
  }

  /**
   * Delete Span
   *
   * @remarks
   * Delete a span by its id
   */
  async delete(
    spanId: string,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(spansDelete(
      this,
      spanId,
      options,
    ));
  }

  /**
   * Save To Dataset
   *
   * @remarks
   * Save all generation spans to the dataset
   */
  async saveExamples(
    spanId: string,
    options?: RequestOptions,
  ): Promise<models.SaveToDatasetResponse> {
    return unwrapAsync(spansSaveExamples(
      this,
      spanId,
      options,
    ));
  }
}
