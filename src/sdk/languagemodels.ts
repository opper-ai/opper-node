/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { languageModelsDeleteCustom } from "../funcs/languageModelsDeleteCustom.js";
import { languageModelsGetCustom } from "../funcs/languageModelsGetCustom.js";
import { languageModelsGetCustomByName } from "../funcs/languageModelsGetCustomByName.js";
import { languageModelsList } from "../funcs/languageModelsList.js";
import { languageModelsListCustom } from "../funcs/languageModelsListCustom.js";
import { languageModelsRegisterCustom } from "../funcs/languageModelsRegisterCustom.js";
import { languageModelsUpdateCustom } from "../funcs/languageModelsUpdateCustom.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class LanguageModels extends ClientSDK {
  /**
   * List Models
   *
   * @remarks
   * List all language models available in the Opper platform
   *
   * For more information on the models available, see the [Opper Models](https://docs.opper.ai/capabilities/models) documentation.
   */
  async list(
    offset?: number | undefined,
    limit?: number | undefined,
    options?: RequestOptions,
  ): Promise<models.PaginatedResponseListLanguageModelsResponse> {
    return unwrapAsync(languageModelsList(
      this,
      offset,
      limit,
      options,
    ));
  }

  /**
   * Register Custom Model
   *
   * @remarks
   * Register a custom language model with the organization that owns the API key.
   */
  async registerCustom(
    request: models.RegisterCustomModelRequest,
    options?: RequestOptions,
  ): Promise<models.RegisterCustomModelResponse> {
    return unwrapAsync(languageModelsRegisterCustom(
      this,
      request,
      options,
    ));
  }

  /**
   * List Custom Models
   *
   * @remarks
   * List all custom language models for the organization that owns the API key.
   */
  async listCustom(
    offset?: number | undefined,
    limit?: number | undefined,
    options?: RequestOptions,
  ): Promise<models.PaginatedResponseListCustomModelsResponseItem> {
    return unwrapAsync(languageModelsListCustom(
      this,
      offset,
      limit,
      options,
    ));
  }

  /**
   * Get Custom Model
   *
   * @remarks
   * Get a custom language model by its ID.
   */
  async getCustom(
    modelId: string,
    options?: RequestOptions,
  ): Promise<models.GetCustomModelResponse> {
    return unwrapAsync(languageModelsGetCustom(
      this,
      modelId,
      options,
    ));
  }

  /**
   * Update Custom Model
   *
   * @remarks
   * Update a custom language model.
   */
  async updateCustom(
    modelId: string,
    updateCustomModelRequest: models.UpdateCustomModelRequest,
    options?: RequestOptions,
  ): Promise<models.UpdateCustomModelResponse> {
    return unwrapAsync(languageModelsUpdateCustom(
      this,
      modelId,
      updateCustomModelRequest,
      options,
    ));
  }

  /**
   * Delete Custom Model
   *
   * @remarks
   * Delete a custom language model.
   */
  async deleteCustom(
    modelId: string,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(languageModelsDeleteCustom(
      this,
      modelId,
      options,
    ));
  }

  /**
   * Get Custom Model By Name
   *
   * @remarks
   * Get a custom language model by its name.
   */
  async getCustomByName(
    name: string,
    options?: RequestOptions,
  ): Promise<models.GetCustomModelResponse> {
    return unwrapAsync(languageModelsGetCustomByName(
      this,
      name,
      options,
    ));
  }
}
