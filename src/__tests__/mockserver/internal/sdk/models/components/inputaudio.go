// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type InputAudioFormat string

const (
	InputAudioFormatWav InputAudioFormat = "wav"
	InputAudioFormatMp3 InputAudioFormat = "mp3"
)

func (e InputAudioFormat) ToPointer() *InputAudioFormat {
	return &e
}
func (e *InputAudioFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "wav":
		fallthrough
	case "mp3":
		*e = InputAudioFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InputAudioFormat: %v", v)
	}
}

type InputAudio struct {
	Data   string           `json:"data"`
	Format InputAudioFormat `json:"format"`
}

func (o *InputAudio) GetData() string {
	if o == nil {
		return ""
	}
	return o.Data
}

func (o *InputAudio) GetFormat() InputAudioFormat {
	if o == nil {
		return InputAudioFormat("")
	}
	return o.Format
}
