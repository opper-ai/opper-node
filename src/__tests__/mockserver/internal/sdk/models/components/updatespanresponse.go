// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type UpdateSpanResponse struct {
	// The name of the span, something descriptive about the span that will be used to identify it when querying
	Name string `json:"name"`
	// The start time of the span in UTC
	StartTime *time.Time `json:"start_time,omitempty"`
	ID        string     `json:"id"`
	// The id of the trace
	TraceID *string `json:"trace_id,omitempty"`
	// The id of the parent span
	ParentID *string `json:"parent_id,omitempty"`
	// The type of the span
	Type *string `json:"type,omitempty"`
	// The end time of the span in UTC
	EndTime *time.Time `json:"end_time,omitempty"`
	// The input of the span
	Input any `json:"input,omitempty"`
	// The output of the span
	Output any `json:"output,omitempty"`
	// In case of an error, the error message
	Error *string `json:"error,omitempty"`
	// The metadata of the span
	Meta map[string]any `json:"meta,omitempty"`
	// The score of the span
	Score *int64 `json:"score,omitempty"`
}

func (u UpdateSpanResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateSpanResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateSpanResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateSpanResponse) GetStartTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartTime
}

func (o *UpdateSpanResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateSpanResponse) GetTraceID() *string {
	if o == nil {
		return nil
	}
	return o.TraceID
}

func (o *UpdateSpanResponse) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *UpdateSpanResponse) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *UpdateSpanResponse) GetEndTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndTime
}

func (o *UpdateSpanResponse) GetInput() any {
	if o == nil {
		return nil
	}
	return o.Input
}

func (o *UpdateSpanResponse) GetOutput() any {
	if o == nil {
		return nil
	}
	return o.Output
}

func (o *UpdateSpanResponse) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *UpdateSpanResponse) GetMeta() map[string]any {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *UpdateSpanResponse) GetScore() *int64 {
	if o == nil {
		return nil
	}
	return o.Score
}
