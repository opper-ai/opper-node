// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type ChatCompletionPredictionContentParamContentType string

const (
	ChatCompletionPredictionContentParamContentTypeStr                                       ChatCompletionPredictionContentParamContentType = "str"
	ChatCompletionPredictionContentParamContentTypeArrayOfChatCompletionContentPartTextParam ChatCompletionPredictionContentParamContentType = "arrayOfChatCompletionContentPartTextParam"
)

type ChatCompletionPredictionContentParamContent struct {
	Str                                       *string                              `queryParam:"inline"`
	ArrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam `queryParam:"inline"`

	Type ChatCompletionPredictionContentParamContentType
}

func CreateChatCompletionPredictionContentParamContentStr(str string) ChatCompletionPredictionContentParamContent {
	typ := ChatCompletionPredictionContentParamContentTypeStr

	return ChatCompletionPredictionContentParamContent{
		Str:  &str,
		Type: typ,
	}
}

func CreateChatCompletionPredictionContentParamContentArrayOfChatCompletionContentPartTextParam(arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam) ChatCompletionPredictionContentParamContent {
	typ := ChatCompletionPredictionContentParamContentTypeArrayOfChatCompletionContentPartTextParam

	return ChatCompletionPredictionContentParamContent{
		ArrayOfChatCompletionContentPartTextParam: arrayOfChatCompletionContentPartTextParam,
		Type: typ,
	}
}

func (u *ChatCompletionPredictionContentParamContent) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ChatCompletionPredictionContentParamContentTypeStr
		return nil
	}

	var arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam = []ChatCompletionContentPartTextParam{}
	if err := utils.UnmarshalJSON(data, &arrayOfChatCompletionContentPartTextParam, "", true, true); err == nil {
		u.ArrayOfChatCompletionContentPartTextParam = arrayOfChatCompletionContentPartTextParam
		u.Type = ChatCompletionPredictionContentParamContentTypeArrayOfChatCompletionContentPartTextParam
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionPredictionContentParamContent", string(data))
}

func (u ChatCompletionPredictionContentParamContent) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfChatCompletionContentPartTextParam != nil {
		return utils.MarshalJSON(u.ArrayOfChatCompletionContentPartTextParam, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionPredictionContentParamContent: all fields are null")
}

type ChatCompletionPredictionContentParam struct {
	Content ChatCompletionPredictionContentParamContent `json:"content"`
	type_   string                                      `const:"content" json:"type"`
}

func (c ChatCompletionPredictionContentParam) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChatCompletionPredictionContentParam) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ChatCompletionPredictionContentParam) GetContent() ChatCompletionPredictionContentParamContent {
	if o == nil {
		return ChatCompletionPredictionContentParamContent{}
	}
	return o.Content
}

func (o *ChatCompletionPredictionContentParam) GetType() string {
	return "content"
}
