// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type ChatCompletionSystemMessageParamContentType string

const (
	ChatCompletionSystemMessageParamContentTypeStr                                       ChatCompletionSystemMessageParamContentType = "str"
	ChatCompletionSystemMessageParamContentTypeArrayOfChatCompletionContentPartTextParam ChatCompletionSystemMessageParamContentType = "arrayOfChatCompletionContentPartTextParam"
)

type ChatCompletionSystemMessageParamContent struct {
	Str                                       *string                              `queryParam:"inline"`
	ArrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam `queryParam:"inline"`

	Type ChatCompletionSystemMessageParamContentType
}

func CreateChatCompletionSystemMessageParamContentStr(str string) ChatCompletionSystemMessageParamContent {
	typ := ChatCompletionSystemMessageParamContentTypeStr

	return ChatCompletionSystemMessageParamContent{
		Str:  &str,
		Type: typ,
	}
}

func CreateChatCompletionSystemMessageParamContentArrayOfChatCompletionContentPartTextParam(arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam) ChatCompletionSystemMessageParamContent {
	typ := ChatCompletionSystemMessageParamContentTypeArrayOfChatCompletionContentPartTextParam

	return ChatCompletionSystemMessageParamContent{
		ArrayOfChatCompletionContentPartTextParam: arrayOfChatCompletionContentPartTextParam,
		Type: typ,
	}
}

func (u *ChatCompletionSystemMessageParamContent) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ChatCompletionSystemMessageParamContentTypeStr
		return nil
	}

	var arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam = []ChatCompletionContentPartTextParam{}
	if err := utils.UnmarshalJSON(data, &arrayOfChatCompletionContentPartTextParam, "", true, true); err == nil {
		u.ArrayOfChatCompletionContentPartTextParam = arrayOfChatCompletionContentPartTextParam
		u.Type = ChatCompletionSystemMessageParamContentTypeArrayOfChatCompletionContentPartTextParam
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionSystemMessageParamContent", string(data))
}

func (u ChatCompletionSystemMessageParamContent) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfChatCompletionContentPartTextParam != nil {
		return utils.MarshalJSON(u.ArrayOfChatCompletionContentPartTextParam, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionSystemMessageParamContent: all fields are null")
}

type ChatCompletionSystemMessageParam struct {
	Content ChatCompletionSystemMessageParamContent `json:"content"`
	role    string                                  `const:"system" json:"role"`
	Name    *string                                 `json:"name,omitempty"`
}

func (c ChatCompletionSystemMessageParam) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChatCompletionSystemMessageParam) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ChatCompletionSystemMessageParam) GetContent() ChatCompletionSystemMessageParamContent {
	if o == nil {
		return ChatCompletionSystemMessageParamContent{}
	}
	return o.Content
}

func (o *ChatCompletionSystemMessageParam) GetRole() string {
	return "system"
}

func (o *ChatCompletionSystemMessageParam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}
