// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Op string

const (
	OpEqual       Op = "="
	OpNotEqual    Op = "!="
	OpGreaterThan Op = ">"
	OpLessThan    Op = "<"
	OpIn          Op = "in"
)

func (e Op) ToPointer() *Op {
	return &e
}
func (e *Op) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "=":
		fallthrough
	case "!=":
		fallthrough
	case ">":
		fallthrough
	case "<":
		fallthrough
	case "in":
		*e = Op(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Op: %v", v)
	}
}
