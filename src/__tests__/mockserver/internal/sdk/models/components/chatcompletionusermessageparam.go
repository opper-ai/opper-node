// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type ChatCompletionUserMessageParamContent1Type string

const (
	ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartTextParam       ChatCompletionUserMessageParamContent1Type = "ChatCompletionContentPartTextParam"
	ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartImageParam      ChatCompletionUserMessageParamContent1Type = "ChatCompletionContentPartImageParam"
	ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartInputAudioParam ChatCompletionUserMessageParamContent1Type = "ChatCompletionContentPartInputAudioParam"
	ChatCompletionUserMessageParamContent1TypeFile                                     ChatCompletionUserMessageParamContent1Type = "File"
)

type ChatCompletionUserMessageParamContent1 struct {
	ChatCompletionContentPartTextParam       *ChatCompletionContentPartTextParam       `queryParam:"inline"`
	ChatCompletionContentPartImageParam      *ChatCompletionContentPartImageParam      `queryParam:"inline"`
	ChatCompletionContentPartInputAudioParam *ChatCompletionContentPartInputAudioParam `queryParam:"inline"`
	File                                     *File                                     `queryParam:"inline"`

	Type ChatCompletionUserMessageParamContent1Type
}

func CreateChatCompletionUserMessageParamContent1ChatCompletionContentPartTextParam(chatCompletionContentPartTextParam ChatCompletionContentPartTextParam) ChatCompletionUserMessageParamContent1 {
	typ := ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartTextParam

	return ChatCompletionUserMessageParamContent1{
		ChatCompletionContentPartTextParam: &chatCompletionContentPartTextParam,
		Type:                               typ,
	}
}

func CreateChatCompletionUserMessageParamContent1ChatCompletionContentPartImageParam(chatCompletionContentPartImageParam ChatCompletionContentPartImageParam) ChatCompletionUserMessageParamContent1 {
	typ := ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartImageParam

	return ChatCompletionUserMessageParamContent1{
		ChatCompletionContentPartImageParam: &chatCompletionContentPartImageParam,
		Type:                                typ,
	}
}

func CreateChatCompletionUserMessageParamContent1ChatCompletionContentPartInputAudioParam(chatCompletionContentPartInputAudioParam ChatCompletionContentPartInputAudioParam) ChatCompletionUserMessageParamContent1 {
	typ := ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartInputAudioParam

	return ChatCompletionUserMessageParamContent1{
		ChatCompletionContentPartInputAudioParam: &chatCompletionContentPartInputAudioParam,
		Type:                                     typ,
	}
}

func CreateChatCompletionUserMessageParamContent1File(file File) ChatCompletionUserMessageParamContent1 {
	typ := ChatCompletionUserMessageParamContent1TypeFile

	return ChatCompletionUserMessageParamContent1{
		File: &file,
		Type: typ,
	}
}

func (u *ChatCompletionUserMessageParamContent1) UnmarshalJSON(data []byte) error {

	var chatCompletionContentPartTextParam ChatCompletionContentPartTextParam = ChatCompletionContentPartTextParam{}
	if err := utils.UnmarshalJSON(data, &chatCompletionContentPartTextParam, "", true, true); err == nil {
		u.ChatCompletionContentPartTextParam = &chatCompletionContentPartTextParam
		u.Type = ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartTextParam
		return nil
	}

	var chatCompletionContentPartImageParam ChatCompletionContentPartImageParam = ChatCompletionContentPartImageParam{}
	if err := utils.UnmarshalJSON(data, &chatCompletionContentPartImageParam, "", true, true); err == nil {
		u.ChatCompletionContentPartImageParam = &chatCompletionContentPartImageParam
		u.Type = ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartImageParam
		return nil
	}

	var chatCompletionContentPartInputAudioParam ChatCompletionContentPartInputAudioParam = ChatCompletionContentPartInputAudioParam{}
	if err := utils.UnmarshalJSON(data, &chatCompletionContentPartInputAudioParam, "", true, true); err == nil {
		u.ChatCompletionContentPartInputAudioParam = &chatCompletionContentPartInputAudioParam
		u.Type = ChatCompletionUserMessageParamContent1TypeChatCompletionContentPartInputAudioParam
		return nil
	}

	var file File = File{}
	if err := utils.UnmarshalJSON(data, &file, "", true, true); err == nil {
		u.File = &file
		u.Type = ChatCompletionUserMessageParamContent1TypeFile
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionUserMessageParamContent1", string(data))
}

func (u ChatCompletionUserMessageParamContent1) MarshalJSON() ([]byte, error) {
	if u.ChatCompletionContentPartTextParam != nil {
		return utils.MarshalJSON(u.ChatCompletionContentPartTextParam, "", true)
	}

	if u.ChatCompletionContentPartImageParam != nil {
		return utils.MarshalJSON(u.ChatCompletionContentPartImageParam, "", true)
	}

	if u.ChatCompletionContentPartInputAudioParam != nil {
		return utils.MarshalJSON(u.ChatCompletionContentPartInputAudioParam, "", true)
	}

	if u.File != nil {
		return utils.MarshalJSON(u.File, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionUserMessageParamContent1: all fields are null")
}

type ChatCompletionUserMessageParamContent2Type string

const (
	ChatCompletionUserMessageParamContent2TypeStr                                           ChatCompletionUserMessageParamContent2Type = "str"
	ChatCompletionUserMessageParamContent2TypeArrayOfChatCompletionUserMessageParamContent1 ChatCompletionUserMessageParamContent2Type = "arrayOfChatCompletionUserMessageParamContent1"
)

type ChatCompletionUserMessageParamContent2 struct {
	Str                                           *string                                  `queryParam:"inline"`
	ArrayOfChatCompletionUserMessageParamContent1 []ChatCompletionUserMessageParamContent1 `queryParam:"inline"`

	Type ChatCompletionUserMessageParamContent2Type
}

func CreateChatCompletionUserMessageParamContent2Str(str string) ChatCompletionUserMessageParamContent2 {
	typ := ChatCompletionUserMessageParamContent2TypeStr

	return ChatCompletionUserMessageParamContent2{
		Str:  &str,
		Type: typ,
	}
}

func CreateChatCompletionUserMessageParamContent2ArrayOfChatCompletionUserMessageParamContent1(arrayOfChatCompletionUserMessageParamContent1 []ChatCompletionUserMessageParamContent1) ChatCompletionUserMessageParamContent2 {
	typ := ChatCompletionUserMessageParamContent2TypeArrayOfChatCompletionUserMessageParamContent1

	return ChatCompletionUserMessageParamContent2{
		ArrayOfChatCompletionUserMessageParamContent1: arrayOfChatCompletionUserMessageParamContent1,
		Type: typ,
	}
}

func (u *ChatCompletionUserMessageParamContent2) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ChatCompletionUserMessageParamContent2TypeStr
		return nil
	}

	var arrayOfChatCompletionUserMessageParamContent1 []ChatCompletionUserMessageParamContent1 = []ChatCompletionUserMessageParamContent1{}
	if err := utils.UnmarshalJSON(data, &arrayOfChatCompletionUserMessageParamContent1, "", true, true); err == nil {
		u.ArrayOfChatCompletionUserMessageParamContent1 = arrayOfChatCompletionUserMessageParamContent1
		u.Type = ChatCompletionUserMessageParamContent2TypeArrayOfChatCompletionUserMessageParamContent1
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionUserMessageParamContent2", string(data))
}

func (u ChatCompletionUserMessageParamContent2) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfChatCompletionUserMessageParamContent1 != nil {
		return utils.MarshalJSON(u.ArrayOfChatCompletionUserMessageParamContent1, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionUserMessageParamContent2: all fields are null")
}

type ChatCompletionUserMessageParam struct {
	Content ChatCompletionUserMessageParamContent2 `json:"content"`
	role    string                                 `const:"user" json:"role"`
	Name    *string                                `json:"name,omitempty"`
}

func (c ChatCompletionUserMessageParam) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChatCompletionUserMessageParam) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ChatCompletionUserMessageParam) GetContent() ChatCompletionUserMessageParamContent2 {
	if o == nil {
		return ChatCompletionUserMessageParamContent2{}
	}
	return o.Content
}

func (o *ChatCompletionUserMessageParam) GetRole() string {
	return "user"
}

func (o *ChatCompletionUserMessageParam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}
