// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type ChatCompletionDeveloperMessageParamContentType string

const (
	ChatCompletionDeveloperMessageParamContentTypeStr                                       ChatCompletionDeveloperMessageParamContentType = "str"
	ChatCompletionDeveloperMessageParamContentTypeArrayOfChatCompletionContentPartTextParam ChatCompletionDeveloperMessageParamContentType = "arrayOfChatCompletionContentPartTextParam"
)

type ChatCompletionDeveloperMessageParamContent struct {
	Str                                       *string                              `queryParam:"inline"`
	ArrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam `queryParam:"inline"`

	Type ChatCompletionDeveloperMessageParamContentType
}

func CreateChatCompletionDeveloperMessageParamContentStr(str string) ChatCompletionDeveloperMessageParamContent {
	typ := ChatCompletionDeveloperMessageParamContentTypeStr

	return ChatCompletionDeveloperMessageParamContent{
		Str:  &str,
		Type: typ,
	}
}

func CreateChatCompletionDeveloperMessageParamContentArrayOfChatCompletionContentPartTextParam(arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam) ChatCompletionDeveloperMessageParamContent {
	typ := ChatCompletionDeveloperMessageParamContentTypeArrayOfChatCompletionContentPartTextParam

	return ChatCompletionDeveloperMessageParamContent{
		ArrayOfChatCompletionContentPartTextParam: arrayOfChatCompletionContentPartTextParam,
		Type: typ,
	}
}

func (u *ChatCompletionDeveloperMessageParamContent) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = ChatCompletionDeveloperMessageParamContentTypeStr
		return nil
	}

	var arrayOfChatCompletionContentPartTextParam []ChatCompletionContentPartTextParam = []ChatCompletionContentPartTextParam{}
	if err := utils.UnmarshalJSON(data, &arrayOfChatCompletionContentPartTextParam, "", true, true); err == nil {
		u.ArrayOfChatCompletionContentPartTextParam = arrayOfChatCompletionContentPartTextParam
		u.Type = ChatCompletionDeveloperMessageParamContentTypeArrayOfChatCompletionContentPartTextParam
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionDeveloperMessageParamContent", string(data))
}

func (u ChatCompletionDeveloperMessageParamContent) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfChatCompletionContentPartTextParam != nil {
		return utils.MarshalJSON(u.ArrayOfChatCompletionContentPartTextParam, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionDeveloperMessageParamContent: all fields are null")
}

type ChatCompletionDeveloperMessageParam struct {
	Content ChatCompletionDeveloperMessageParamContent `json:"content"`
	role    string                                     `const:"developer" json:"role"`
	Name    *string                                    `json:"name,omitempty"`
}

func (c ChatCompletionDeveloperMessageParam) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ChatCompletionDeveloperMessageParam) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ChatCompletionDeveloperMessageParam) GetContent() ChatCompletionDeveloperMessageParamContent {
	if o == nil {
		return ChatCompletionDeveloperMessageParamContent{}
	}
	return o.Content
}

func (o *ChatCompletionDeveloperMessageParam) GetRole() string {
	return "developer"
}

func (o *ChatCompletionDeveloperMessageParam) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}
