// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type FinishReason string

const (
	FinishReasonStop          FinishReason = "stop"
	FinishReasonLength        FinishReason = "length"
	FinishReasonToolCalls     FinishReason = "tool_calls"
	FinishReasonContentFilter FinishReason = "content_filter"
	FinishReasonFunctionCall  FinishReason = "function_call"
)

func (e FinishReason) ToPointer() *FinishReason {
	return &e
}
func (e *FinishReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stop":
		fallthrough
	case "length":
		fallthrough
	case "tool_calls":
		fallthrough
	case "content_filter":
		fallthrough
	case "function_call":
		*e = FinishReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FinishReason: %v", v)
	}
}

type Choice struct {
	FinishReason         FinishReason          `json:"finish_reason"`
	Index                int64                 `json:"index"`
	Logprobs             *ChoiceLogprobs       `json:"logprobs,omitempty"`
	Message              ChatCompletionMessage `json:"message"`
	AdditionalProperties map[string]any        `additionalProperties:"true" json:"-"`
}

func (c Choice) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Choice) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Choice) GetFinishReason() FinishReason {
	if o == nil {
		return FinishReason("")
	}
	return o.FinishReason
}

func (o *Choice) GetIndex() int64 {
	if o == nil {
		return 0
	}
	return o.Index
}

func (o *Choice) GetLogprobs() *ChoiceLogprobs {
	if o == nil {
		return nil
	}
	return o.Logprobs
}

func (o *Choice) GetMessage() ChatCompletionMessage {
	if o == nil {
		return ChatCompletionMessage{}
	}
	return o.Message
}

func (o *Choice) GetAdditionalProperties() map[string]any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}
