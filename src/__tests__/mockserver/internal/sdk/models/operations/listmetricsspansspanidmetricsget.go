// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListMetricsSpansSpanIDMetricsGetRequest struct {
	// The id of the span to list metrics for
	SpanID string `pathParam:"style=simple,explode=false,name=span_id"`
	// The offset to start the list from
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// The number of metrics to return
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
}

func (l ListMetricsSpansSpanIDMetricsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListMetricsSpansSpanIDMetricsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListMetricsSpansSpanIDMetricsGetRequest) GetSpanID() string {
	if o == nil {
		return ""
	}
	return o.SpanID
}

func (o *ListMetricsSpansSpanIDMetricsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListMetricsSpansSpanIDMetricsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ListMetricsSpansSpanIDMetricsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	PaginatedResponseListSpanMetricsResponse *components.PaginatedResponseListSpanMetricsResponse
}

func (o *ListMetricsSpansSpanIDMetricsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListMetricsSpansSpanIDMetricsGetResponse) GetPaginatedResponseListSpanMetricsResponse() *components.PaginatedResponseListSpanMetricsResponse {
	if o == nil {
		return nil
	}
	return o.PaginatedResponseListSpanMetricsResponse
}
