// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListModelsModelsGetRequest struct {
	// The offset of the models to return when paginating
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// The number of models to return per page when paginating
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
}

func (l ListModelsModelsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListModelsModelsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListModelsModelsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListModelsModelsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ListModelsModelsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	PaginatedResponseListLanguageModelsResponse *components.PaginatedResponseListLanguageModelsResponse
}

func (o *ListModelsModelsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListModelsModelsGetResponse) GetPaginatedResponseListLanguageModelsResponse() *components.PaginatedResponseListLanguageModelsResponse {
	if o == nil {
		return nil
	}
	return o.PaginatedResponseListLanguageModelsResponse
}
