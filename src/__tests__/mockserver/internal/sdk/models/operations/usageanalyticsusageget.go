// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
	"time"
)

type UsageAnalyticsUsageGetRequest struct {
	// Start date for the time range (inclusive). If not provided, defaults to the first day of the current month.
	FromDate *time.Time `queryParam:"style=form,explode=true,name=from_date"`
	// End date for the time range (exclusive). If not provided, defaults to the last day of the current month.
	ToDate *time.Time `queryParam:"style=form,explode=true,name=to_date"`
	// Time granularity for grouping (minute, hour, day, month, year)
	Granularity *components.Granularity `queryParam:"style=form,explode=true,name=granularity"`
	// Fields from event_metadata to include and sum
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// Fields from tags to group by
	GroupBy []string `queryParam:"style=form,explode=true,name=group_by"`
}

func (u UsageAnalyticsUsageGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UsageAnalyticsUsageGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UsageAnalyticsUsageGetRequest) GetFromDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.FromDate
}

func (o *UsageAnalyticsUsageGetRequest) GetToDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.ToDate
}

func (o *UsageAnalyticsUsageGetRequest) GetGranularity() *components.Granularity {
	if o == nil {
		return nil
	}
	return o.Granularity
}

func (o *UsageAnalyticsUsageGetRequest) GetFields() []string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *UsageAnalyticsUsageGetRequest) GetGroupBy() []string {
	if o == nil {
		return nil
	}
	return o.GroupBy
}

type UsageAnalyticsUsageGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ResponseUsageAnalyticsUsageGet []components.GetUsageResultItem
}

func (o *UsageAnalyticsUsageGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UsageAnalyticsUsageGetResponse) GetResponseUsageAnalyticsUsageGet() []components.GetUsageResultItem {
	if o == nil {
		return nil
	}
	return o.ResponseUsageAnalyticsUsageGet
}
