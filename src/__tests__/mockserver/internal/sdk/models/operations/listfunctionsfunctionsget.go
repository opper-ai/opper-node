// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListFunctionsFunctionsGetRequest struct {
	// Filter functions by name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Sort the functions by name or created_at, use '-' to sort in descending order
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// The offset of the page of functions to return when paginating
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// The number of functions to return per page when paginating
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
}

func (o *ListFunctionsFunctionsGetRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListFunctionsFunctionsGetRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListFunctionsFunctionsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListFunctionsFunctionsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ListFunctionsFunctionsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	PaginatedResponseListFunctionsResponseItem *components.PaginatedResponseListFunctionsResponseItem
}

func (o *ListFunctionsFunctionsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListFunctionsFunctionsGetResponse) GetPaginatedResponseListFunctionsResponseItem() *components.PaginatedResponseListFunctionsResponseItem {
	if o == nil {
		return nil
	}
	return o.PaginatedResponseListFunctionsResponseItem
}
