// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/types/stream"
)

// FunctionStreamCallStreamPostData - The actual data payload containing streaming chunk information
type FunctionStreamCallStreamPostData struct {
	// Incremental text content generated by the model
	Delta *string `json:"delta,omitempty"`
	// Unique identifier for the execution span
	SpanID *string `json:"span_id,omitempty"`
}

func (o *FunctionStreamCallStreamPostData) GetDelta() *string {
	if o == nil {
		return nil
	}
	return o.Delta
}

func (o *FunctionStreamCallStreamPostData) GetSpanID() *string {
	if o == nil {
		return nil
	}
	return o.SpanID
}

// FunctionStreamCallStreamPostResponseBody - Server-Sent Event following the SSE specification
type FunctionStreamCallStreamPostResponseBody struct {
	// Event ID for the SSE event
	ID *string `json:"id,omitempty"`
	// Event type for the SSE event
	Event *string `json:"event,omitempty"`
	// The actual data payload containing streaming chunk information
	Data FunctionStreamCallStreamPostData `json:"data"`
	// Retry interval in milliseconds for the SSE connection
	Retry *int64 `json:"retry,omitempty"`
}

func (o *FunctionStreamCallStreamPostResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *FunctionStreamCallStreamPostResponseBody) GetEvent() *string {
	if o == nil {
		return nil
	}
	return o.Event
}

func (o *FunctionStreamCallStreamPostResponseBody) GetData() FunctionStreamCallStreamPostData {
	if o == nil {
		return FunctionStreamCallStreamPostData{}
	}
	return o.Data
}

func (o *FunctionStreamCallStreamPostResponseBody) GetRetry() *int64 {
	if o == nil {
		return nil
	}
	return o.Retry
}

func (o FunctionStreamCallStreamPostResponseBody) GetEventEncoding(event string) (string, error) {
	return "application/json", nil
}

type FunctionStreamCallStreamPostResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Server-Sent Events stream of function execution chunks
	Object  *stream.EventStream[FunctionStreamCallStreamPostResponseBody]
	Headers map[string][]string
}

func (o *FunctionStreamCallStreamPostResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *FunctionStreamCallStreamPostResponse) GetObject() *stream.EventStream[FunctionStreamCallStreamPostResponseBody] {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *FunctionStreamCallStreamPostResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
