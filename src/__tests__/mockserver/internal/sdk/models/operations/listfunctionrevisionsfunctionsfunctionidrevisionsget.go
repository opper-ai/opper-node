// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListFunctionRevisionsFunctionsFunctionIDRevisionsGetRequest struct {
	// The id of the function to get revisions for
	FunctionID string `pathParam:"style=simple,explode=false,name=function_id"`
	// The offset of the revisions to get
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// The limit of the revisions to get
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
}

func (o *ListFunctionRevisionsFunctionsFunctionIDRevisionsGetRequest) GetFunctionID() string {
	if o == nil {
		return ""
	}
	return o.FunctionID
}

func (o *ListFunctionRevisionsFunctionsFunctionIDRevisionsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListFunctionRevisionsFunctionsFunctionIDRevisionsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ListFunctionRevisionsFunctionsFunctionIDRevisionsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	PaginatedResponseListFunctionRevisionResponse *components.PaginatedResponseListFunctionRevisionResponse
}

func (o *ListFunctionRevisionsFunctionsFunctionIDRevisionsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListFunctionRevisionsFunctionsFunctionIDRevisionsGetResponse) GetPaginatedResponseListFunctionRevisionResponse() *components.PaginatedResponseListFunctionRevisionResponse {
	if o == nil {
		return nil
	}
	return o.PaginatedResponseListFunctionRevisionResponse
}
