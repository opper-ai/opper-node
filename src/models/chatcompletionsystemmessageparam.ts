/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChatCompletionContentPartTextParam,
  ChatCompletionContentPartTextParam$inboundSchema,
  ChatCompletionContentPartTextParam$Outbound,
  ChatCompletionContentPartTextParam$outboundSchema,
} from "./chatcompletioncontentparttextparam.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionSystemMessageParamContent =
  | string
  | Array<ChatCompletionContentPartTextParam>;

export type ChatCompletionSystemMessageParam = {
  content: string | Array<ChatCompletionContentPartTextParam>;
  role?: "system" | undefined;
  name?: string | undefined;
};

/** @internal */
export const ChatCompletionSystemMessageParamContent$inboundSchema: z.ZodType<
  ChatCompletionSystemMessageParamContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(ChatCompletionContentPartTextParam$inboundSchema),
]);

/** @internal */
export type ChatCompletionSystemMessageParamContent$Outbound =
  | string
  | Array<ChatCompletionContentPartTextParam$Outbound>;

/** @internal */
export const ChatCompletionSystemMessageParamContent$outboundSchema: z.ZodType<
  ChatCompletionSystemMessageParamContent$Outbound,
  z.ZodTypeDef,
  ChatCompletionSystemMessageParamContent
> = z.union([
  z.string(),
  z.array(ChatCompletionContentPartTextParam$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionSystemMessageParamContent$ {
  /** @deprecated use `ChatCompletionSystemMessageParamContent$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionSystemMessageParamContent$inboundSchema;
  /** @deprecated use `ChatCompletionSystemMessageParamContent$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionSystemMessageParamContent$outboundSchema;
  /** @deprecated use `ChatCompletionSystemMessageParamContent$Outbound` instead. */
  export type Outbound = ChatCompletionSystemMessageParamContent$Outbound;
}

export function chatCompletionSystemMessageParamContentToJSON(
  chatCompletionSystemMessageParamContent:
    ChatCompletionSystemMessageParamContent,
): string {
  return JSON.stringify(
    ChatCompletionSystemMessageParamContent$outboundSchema.parse(
      chatCompletionSystemMessageParamContent,
    ),
  );
}

export function chatCompletionSystemMessageParamContentFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatCompletionSystemMessageParamContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionSystemMessageParamContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatCompletionSystemMessageParamContent' from JSON`,
  );
}

/** @internal */
export const ChatCompletionSystemMessageParam$inboundSchema: z.ZodType<
  ChatCompletionSystemMessageParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.union([
    z.string(),
    z.array(ChatCompletionContentPartTextParam$inboundSchema),
  ]),
  role: z.literal("system").default("system").optional(),
  name: z.string().optional(),
});

/** @internal */
export type ChatCompletionSystemMessageParam$Outbound = {
  content: string | Array<ChatCompletionContentPartTextParam$Outbound>;
  role: "system";
  name?: string | undefined;
};

/** @internal */
export const ChatCompletionSystemMessageParam$outboundSchema: z.ZodType<
  ChatCompletionSystemMessageParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionSystemMessageParam
> = z.object({
  content: z.union([
    z.string(),
    z.array(ChatCompletionContentPartTextParam$outboundSchema),
  ]),
  role: z.literal("system").default("system" as const),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionSystemMessageParam$ {
  /** @deprecated use `ChatCompletionSystemMessageParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionSystemMessageParam$inboundSchema;
  /** @deprecated use `ChatCompletionSystemMessageParam$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionSystemMessageParam$outboundSchema;
  /** @deprecated use `ChatCompletionSystemMessageParam$Outbound` instead. */
  export type Outbound = ChatCompletionSystemMessageParam$Outbound;
}

export function chatCompletionSystemMessageParamToJSON(
  chatCompletionSystemMessageParam: ChatCompletionSystemMessageParam,
): string {
  return JSON.stringify(
    ChatCompletionSystemMessageParam$outboundSchema.parse(
      chatCompletionSystemMessageParam,
    ),
  );
}

export function chatCompletionSystemMessageParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionSystemMessageParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionSystemMessageParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionSystemMessageParam' from JSON`,
  );
}
