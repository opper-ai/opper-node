/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateModelAliasRequest = {
  /**
   * The name of the model alias
   */
  name: string;
  /**
   * Ordered list of model names to try as fallbacks
   */
  fallbackModels: Array<string>;
  /**
   * Optional description of the model alias
   */
  description?: string | null | undefined;
};

/** @internal */
export const CreateModelAliasRequest$inboundSchema: z.ZodType<
  CreateModelAliasRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  fallback_models: z.array(z.string()),
  description: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "fallback_models": "fallbackModels",
  });
});

/** @internal */
export type CreateModelAliasRequest$Outbound = {
  name: string;
  fallback_models: Array<string>;
  description?: string | null | undefined;
};

/** @internal */
export const CreateModelAliasRequest$outboundSchema: z.ZodType<
  CreateModelAliasRequest$Outbound,
  z.ZodTypeDef,
  CreateModelAliasRequest
> = z.object({
  name: z.string(),
  fallbackModels: z.array(z.string()),
  description: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    fallbackModels: "fallback_models",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateModelAliasRequest$ {
  /** @deprecated use `CreateModelAliasRequest$inboundSchema` instead. */
  export const inboundSchema = CreateModelAliasRequest$inboundSchema;
  /** @deprecated use `CreateModelAliasRequest$outboundSchema` instead. */
  export const outboundSchema = CreateModelAliasRequest$outboundSchema;
  /** @deprecated use `CreateModelAliasRequest$Outbound` instead. */
  export type Outbound = CreateModelAliasRequest$Outbound;
}

export function createModelAliasRequestToJSON(
  createModelAliasRequest: CreateModelAliasRequest,
): string {
  return JSON.stringify(
    CreateModelAliasRequest$outboundSchema.parse(createModelAliasRequest),
  );
}

export function createModelAliasRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateModelAliasRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateModelAliasRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateModelAliasRequest' from JSON`,
  );
}
