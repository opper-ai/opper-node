/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  InputAudio,
  InputAudio$inboundSchema,
  InputAudio$Outbound,
  InputAudio$outboundSchema,
} from "./inputaudio.js";

export type ChatCompletionContentPartInputAudioParam = {
  inputAudio: InputAudio;
  type?: "input_audio" | undefined;
};

/** @internal */
export const ChatCompletionContentPartInputAudioParam$inboundSchema: z.ZodType<
  ChatCompletionContentPartInputAudioParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  input_audio: InputAudio$inboundSchema,
  type: z.literal("input_audio").default("input_audio").optional(),
}).transform((v) => {
  return remap$(v, {
    "input_audio": "inputAudio",
  });
});

/** @internal */
export type ChatCompletionContentPartInputAudioParam$Outbound = {
  input_audio: InputAudio$Outbound;
  type: "input_audio";
};

/** @internal */
export const ChatCompletionContentPartInputAudioParam$outboundSchema: z.ZodType<
  ChatCompletionContentPartInputAudioParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionContentPartInputAudioParam
> = z.object({
  inputAudio: InputAudio$outboundSchema,
  type: z.literal("input_audio").default("input_audio" as const),
}).transform((v) => {
  return remap$(v, {
    inputAudio: "input_audio",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionContentPartInputAudioParam$ {
  /** @deprecated use `ChatCompletionContentPartInputAudioParam$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionContentPartInputAudioParam$inboundSchema;
  /** @deprecated use `ChatCompletionContentPartInputAudioParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionContentPartInputAudioParam$outboundSchema;
  /** @deprecated use `ChatCompletionContentPartInputAudioParam$Outbound` instead. */
  export type Outbound = ChatCompletionContentPartInputAudioParam$Outbound;
}

export function chatCompletionContentPartInputAudioParamToJSON(
  chatCompletionContentPartInputAudioParam:
    ChatCompletionContentPartInputAudioParam,
): string {
  return JSON.stringify(
    ChatCompletionContentPartInputAudioParam$outboundSchema.parse(
      chatCompletionContentPartInputAudioParam,
    ),
  );
}

export function chatCompletionContentPartInputAudioParamFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatCompletionContentPartInputAudioParam,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionContentPartInputAudioParam$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatCompletionContentPartInputAudioParam' from JSON`,
  );
}
