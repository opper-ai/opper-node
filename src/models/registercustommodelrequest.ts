/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type RegisterCustomModelRequest = {
  /**
   * The name of the custom language model
   */
  name: string;
  /**
   * The identifier of the custom language model
   */
  identifier: string;
  /**
   * Extra metadata about the custom language model
   */
  extra?: { [k: string]: any } | undefined;
  /**
   * The API key of the custom language model
   */
  apiKey?: string | null | undefined;
};

/** @internal */
export const RegisterCustomModelRequest$inboundSchema: z.ZodType<
  RegisterCustomModelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
  api_key: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "api_key": "apiKey",
  });
});

/** @internal */
export type RegisterCustomModelRequest$Outbound = {
  name: string;
  identifier: string;
  extra?: { [k: string]: any } | undefined;
  api_key?: string | null | undefined;
};

/** @internal */
export const RegisterCustomModelRequest$outboundSchema: z.ZodType<
  RegisterCustomModelRequest$Outbound,
  z.ZodTypeDef,
  RegisterCustomModelRequest
> = z.object({
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
  apiKey: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    apiKey: "api_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RegisterCustomModelRequest$ {
  /** @deprecated use `RegisterCustomModelRequest$inboundSchema` instead. */
  export const inboundSchema = RegisterCustomModelRequest$inboundSchema;
  /** @deprecated use `RegisterCustomModelRequest$outboundSchema` instead. */
  export const outboundSchema = RegisterCustomModelRequest$outboundSchema;
  /** @deprecated use `RegisterCustomModelRequest$Outbound` instead. */
  export type Outbound = RegisterCustomModelRequest$Outbound;
}

export function registerCustomModelRequestToJSON(
  registerCustomModelRequest: RegisterCustomModelRequest,
): string {
  return JSON.stringify(
    RegisterCustomModelRequest$outboundSchema.parse(registerCustomModelRequest),
  );
}

export function registerCustomModelRequestFromJSON(
  jsonString: string,
): SafeParseResult<RegisterCustomModelRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RegisterCustomModelRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RegisterCustomModelRequest' from JSON`,
  );
}
