/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest = {
  /**
   * The name of the knowledge base to get
   */
  knowledgeBaseName: string;
};

/** @internal */
export const GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$inboundSchema:
  z.ZodType<
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    knowledge_base_name: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "knowledge_base_name": "knowledgeBaseName",
    });
  });

/** @internal */
export type GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$Outbound =
  {
    knowledge_base_name: string;
  };

/** @internal */
export const GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$outboundSchema:
  z.ZodType<
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$Outbound,
    z.ZodTypeDef,
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest
  > = z.object({
    knowledgeBaseName: z.string(),
  }).transform((v) => {
    return remap$(v, {
      knowledgeBaseName: "knowledge_base_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$ {
  /** @deprecated use `GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$inboundSchema;
  /** @deprecated use `GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$outboundSchema;
  /** @deprecated use `GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$Outbound` instead. */
  export type Outbound =
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$Outbound;
}

export function getKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequestToJSON(
  getKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest:
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest,
): string {
  return JSON.stringify(
    GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$outboundSchema
      .parse(getKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest),
  );
}

export function getKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetKnowledgeBaseByNameKnowledgeByNameKnowledgeBaseNameGetRequest' from JSON`,
  );
}
