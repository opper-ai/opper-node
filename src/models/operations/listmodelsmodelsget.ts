/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListModelsModelsGetRequest = {
  /**
   * The offset of the models to return when paginating
   */
  offset?: number | undefined;
  /**
   * The number of models to return per page when paginating
   */
  limit?: number | undefined;
};

/** @internal */
export const ListModelsModelsGetRequest$inboundSchema: z.ZodType<
  ListModelsModelsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/** @internal */
export type ListModelsModelsGetRequest$Outbound = {
  offset: number;
  limit: number;
};

/** @internal */
export const ListModelsModelsGetRequest$outboundSchema: z.ZodType<
  ListModelsModelsGetRequest$Outbound,
  z.ZodTypeDef,
  ListModelsModelsGetRequest
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListModelsModelsGetRequest$ {
  /** @deprecated use `ListModelsModelsGetRequest$inboundSchema` instead. */
  export const inboundSchema = ListModelsModelsGetRequest$inboundSchema;
  /** @deprecated use `ListModelsModelsGetRequest$outboundSchema` instead. */
  export const outboundSchema = ListModelsModelsGetRequest$outboundSchema;
  /** @deprecated use `ListModelsModelsGetRequest$Outbound` instead. */
  export type Outbound = ListModelsModelsGetRequest$Outbound;
}

export function listModelsModelsGetRequestToJSON(
  listModelsModelsGetRequest: ListModelsModelsGetRequest,
): string {
  return JSON.stringify(
    ListModelsModelsGetRequest$outboundSchema.parse(listModelsModelsGetRequest),
  );
}

export function listModelsModelsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListModelsModelsGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListModelsModelsGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListModelsModelsGetRequest' from JSON`,
  );
}
