/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateMetricSpansSpanIdMetricsPostRequest = {
  /**
   * The id of the span
   */
  spanId: string;
  createSpanMetricRequest: models.CreateSpanMetricRequest;
};

/** @internal */
export const CreateMetricSpansSpanIdMetricsPostRequest$inboundSchema: z.ZodType<
  CreateMetricSpansSpanIdMetricsPostRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  span_id: z.string(),
  CreateSpanMetricRequest: models.CreateSpanMetricRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "span_id": "spanId",
    "CreateSpanMetricRequest": "createSpanMetricRequest",
  });
});

/** @internal */
export type CreateMetricSpansSpanIdMetricsPostRequest$Outbound = {
  span_id: string;
  CreateSpanMetricRequest: models.CreateSpanMetricRequest$Outbound;
};

/** @internal */
export const CreateMetricSpansSpanIdMetricsPostRequest$outboundSchema:
  z.ZodType<
    CreateMetricSpansSpanIdMetricsPostRequest$Outbound,
    z.ZodTypeDef,
    CreateMetricSpansSpanIdMetricsPostRequest
  > = z.object({
    spanId: z.string(),
    createSpanMetricRequest: models.CreateSpanMetricRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      spanId: "span_id",
      createSpanMetricRequest: "CreateSpanMetricRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMetricSpansSpanIdMetricsPostRequest$ {
  /** @deprecated use `CreateMetricSpansSpanIdMetricsPostRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateMetricSpansSpanIdMetricsPostRequest$inboundSchema;
  /** @deprecated use `CreateMetricSpansSpanIdMetricsPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateMetricSpansSpanIdMetricsPostRequest$outboundSchema;
  /** @deprecated use `CreateMetricSpansSpanIdMetricsPostRequest$Outbound` instead. */
  export type Outbound = CreateMetricSpansSpanIdMetricsPostRequest$Outbound;
}

export function createMetricSpansSpanIdMetricsPostRequestToJSON(
  createMetricSpansSpanIdMetricsPostRequest:
    CreateMetricSpansSpanIdMetricsPostRequest,
): string {
  return JSON.stringify(
    CreateMetricSpansSpanIdMetricsPostRequest$outboundSchema.parse(
      createMetricSpansSpanIdMetricsPostRequest,
    ),
  );
}

export function createMetricSpansSpanIdMetricsPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateMetricSpansSpanIdMetricsPostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateMetricSpansSpanIdMetricsPostRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateMetricSpansSpanIdMetricsPostRequest' from JSON`,
  );
}
