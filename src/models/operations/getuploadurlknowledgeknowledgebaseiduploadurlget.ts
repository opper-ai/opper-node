/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest = {
  /**
   * The id of the knowledge base to get the upload URL for
   */
  knowledgeBaseId: string;
  /**
   * The filename of the file to upload
   */
  filename: string;
};

/** @internal */
export const GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$inboundSchema:
  z.ZodType<
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    knowledge_base_id: z.string(),
    filename: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "knowledge_base_id": "knowledgeBaseId",
    });
  });

/** @internal */
export type GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$Outbound = {
  knowledge_base_id: string;
  filename: string;
};

/** @internal */
export const GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$outboundSchema:
  z.ZodType<
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$Outbound,
    z.ZodTypeDef,
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest
  > = z.object({
    knowledgeBaseId: z.string(),
    filename: z.string(),
  }).transform((v) => {
    return remap$(v, {
      knowledgeBaseId: "knowledge_base_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$ {
  /** @deprecated use `GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$inboundSchema;
  /** @deprecated use `GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$outboundSchema;
  /** @deprecated use `GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$Outbound` instead. */
  export type Outbound =
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$Outbound;
}

export function getUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequestToJSON(
  getUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest:
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest,
): string {
  return JSON.stringify(
    GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$outboundSchema
      .parse(getUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest),
  );
}

export function getUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetUploadUrlKnowledgeKnowledgeBaseIdUploadUrlGetRequest' from JSON`,
  );
}
