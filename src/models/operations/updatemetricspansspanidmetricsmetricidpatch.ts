/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest = {
  /**
   * The id of the span
   */
  spanId: string;
  /**
   * The id of the metric to update
   */
  metricId: string;
  updateSpanMetricRequest: models.UpdateSpanMetricRequest;
};

/** @internal */
export const UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$inboundSchema:
  z.ZodType<
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    span_id: z.string(),
    metric_id: z.string(),
    UpdateSpanMetricRequest: models.UpdateSpanMetricRequest$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "span_id": "spanId",
      "metric_id": "metricId",
      "UpdateSpanMetricRequest": "updateSpanMetricRequest",
    });
  });

/** @internal */
export type UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$Outbound = {
  span_id: string;
  metric_id: string;
  UpdateSpanMetricRequest: models.UpdateSpanMetricRequest$Outbound;
};

/** @internal */
export const UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$outboundSchema:
  z.ZodType<
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$Outbound,
    z.ZodTypeDef,
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest
  > = z.object({
    spanId: z.string(),
    metricId: z.string(),
    updateSpanMetricRequest: models.UpdateSpanMetricRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      spanId: "span_id",
      metricId: "metric_id",
      updateSpanMetricRequest: "UpdateSpanMetricRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$ {
  /** @deprecated use `UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$inboundSchema` instead. */
  export const inboundSchema =
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$inboundSchema;
  /** @deprecated use `UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$outboundSchema;
  /** @deprecated use `UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$Outbound` instead. */
  export type Outbound =
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$Outbound;
}

export function updateMetricSpansSpanIdMetricsMetricIdPatchRequestToJSON(
  updateMetricSpansSpanIdMetricsMetricIdPatchRequest:
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest,
): string {
  return JSON.stringify(
    UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$outboundSchema.parse(
      updateMetricSpansSpanIdMetricsMetricIdPatchRequest,
    ),
  );
}

export function updateMetricSpansSpanIdMetricsMetricIdPatchRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateMetricSpansSpanIdMetricsMetricIdPatchRequest' from JSON`,
  );
}
