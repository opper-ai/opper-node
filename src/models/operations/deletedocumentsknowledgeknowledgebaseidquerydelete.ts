/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest = {
  /**
   * The id of the knowledge base to delete or delete documents from
   */
  knowledgeBaseId: string;
  deleteKnowledgeBaseRequest?:
    | models.DeleteKnowledgeBaseRequest
    | null
    | undefined;
};

/** @internal */
export const DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$inboundSchema:
  z.ZodType<
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    knowledge_base_id: z.string(),
    DeleteKnowledgeBaseRequest: z.nullable(
      models.DeleteKnowledgeBaseRequest$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "knowledge_base_id": "knowledgeBaseId",
      "DeleteKnowledgeBaseRequest": "deleteKnowledgeBaseRequest",
    });
  });

/** @internal */
export type DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$Outbound =
  {
    knowledge_base_id: string;
    DeleteKnowledgeBaseRequest?:
      | models.DeleteKnowledgeBaseRequest$Outbound
      | null
      | undefined;
  };

/** @internal */
export const DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$outboundSchema:
  z.ZodType<
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$Outbound,
    z.ZodTypeDef,
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest
  > = z.object({
    knowledgeBaseId: z.string(),
    deleteKnowledgeBaseRequest: z.nullable(
      models.DeleteKnowledgeBaseRequest$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      knowledgeBaseId: "knowledge_base_id",
      deleteKnowledgeBaseRequest: "DeleteKnowledgeBaseRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$ {
  /** @deprecated use `DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$inboundSchema;
  /** @deprecated use `DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$outboundSchema;
  /** @deprecated use `DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$Outbound` instead. */
  export type Outbound =
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$Outbound;
}

export function deleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequestToJSON(
  deleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest:
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest,
): string {
  return JSON.stringify(
    DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$outboundSchema
      .parse(deleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest),
  );
}

export function deleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteDocumentsKnowledgeKnowledgeBaseIdQueryDeleteRequest' from JSON`,
  );
}
