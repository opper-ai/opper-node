/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetModelAliasModelsAliasesAliasIdGetRequest = {
  /**
   * The ID of the model alias to get
   */
  aliasId: string;
};

/** @internal */
export const GetModelAliasModelsAliasesAliasIdGetRequest$inboundSchema:
  z.ZodType<
    GetModelAliasModelsAliasesAliasIdGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    alias_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "alias_id": "aliasId",
    });
  });

/** @internal */
export type GetModelAliasModelsAliasesAliasIdGetRequest$Outbound = {
  alias_id: string;
};

/** @internal */
export const GetModelAliasModelsAliasesAliasIdGetRequest$outboundSchema:
  z.ZodType<
    GetModelAliasModelsAliasesAliasIdGetRequest$Outbound,
    z.ZodTypeDef,
    GetModelAliasModelsAliasesAliasIdGetRequest
  > = z.object({
    aliasId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      aliasId: "alias_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelAliasModelsAliasesAliasIdGetRequest$ {
  /** @deprecated use `GetModelAliasModelsAliasesAliasIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetModelAliasModelsAliasesAliasIdGetRequest$inboundSchema;
  /** @deprecated use `GetModelAliasModelsAliasesAliasIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetModelAliasModelsAliasesAliasIdGetRequest$outboundSchema;
  /** @deprecated use `GetModelAliasModelsAliasesAliasIdGetRequest$Outbound` instead. */
  export type Outbound = GetModelAliasModelsAliasesAliasIdGetRequest$Outbound;
}

export function getModelAliasModelsAliasesAliasIdGetRequestToJSON(
  getModelAliasModelsAliasesAliasIdGetRequest:
    GetModelAliasModelsAliasesAliasIdGetRequest,
): string {
  return JSON.stringify(
    GetModelAliasModelsAliasesAliasIdGetRequest$outboundSchema.parse(
      getModelAliasModelsAliasesAliasIdGetRequest,
    ),
  );
}

export function getModelAliasModelsAliasesAliasIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetModelAliasModelsAliasesAliasIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetModelAliasModelsAliasesAliasIdGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetModelAliasModelsAliasesAliasIdGetRequest' from JSON`,
  );
}
