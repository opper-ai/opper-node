/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateDatasetEntryDatasetsDatasetIdPostRequest = {
  /**
   * The id of the dataset
   */
  datasetId: string;
  createDatasetEntryRequest: models.CreateDatasetEntryRequest;
};

/** @internal */
export const CreateDatasetEntryDatasetsDatasetIdPostRequest$inboundSchema:
  z.ZodType<
    CreateDatasetEntryDatasetsDatasetIdPostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    dataset_id: z.string(),
    CreateDatasetEntryRequest: models.CreateDatasetEntryRequest$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "dataset_id": "datasetId",
      "CreateDatasetEntryRequest": "createDatasetEntryRequest",
    });
  });

/** @internal */
export type CreateDatasetEntryDatasetsDatasetIdPostRequest$Outbound = {
  dataset_id: string;
  CreateDatasetEntryRequest: models.CreateDatasetEntryRequest$Outbound;
};

/** @internal */
export const CreateDatasetEntryDatasetsDatasetIdPostRequest$outboundSchema:
  z.ZodType<
    CreateDatasetEntryDatasetsDatasetIdPostRequest$Outbound,
    z.ZodTypeDef,
    CreateDatasetEntryDatasetsDatasetIdPostRequest
  > = z.object({
    datasetId: z.string(),
    createDatasetEntryRequest: models.CreateDatasetEntryRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      datasetId: "dataset_id",
      createDatasetEntryRequest: "CreateDatasetEntryRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetEntryDatasetsDatasetIdPostRequest$ {
  /** @deprecated use `CreateDatasetEntryDatasetsDatasetIdPostRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetEntryDatasetsDatasetIdPostRequest$inboundSchema;
  /** @deprecated use `CreateDatasetEntryDatasetsDatasetIdPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetEntryDatasetsDatasetIdPostRequest$outboundSchema;
  /** @deprecated use `CreateDatasetEntryDatasetsDatasetIdPostRequest$Outbound` instead. */
  export type Outbound =
    CreateDatasetEntryDatasetsDatasetIdPostRequest$Outbound;
}

export function createDatasetEntryDatasetsDatasetIdPostRequestToJSON(
  createDatasetEntryDatasetsDatasetIdPostRequest:
    CreateDatasetEntryDatasetsDatasetIdPostRequest,
): string {
  return JSON.stringify(
    CreateDatasetEntryDatasetsDatasetIdPostRequest$outboundSchema.parse(
      createDatasetEntryDatasetsDatasetIdPostRequest,
    ),
  );
}

export function createDatasetEntryDatasetsDatasetIdPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetEntryDatasetsDatasetIdPostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetEntryDatasetsDatasetIdPostRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetEntryDatasetsDatasetIdPostRequest' from JSON`,
  );
}
