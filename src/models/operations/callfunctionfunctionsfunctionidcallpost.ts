/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CallFunctionFunctionsFunctionIdCallPostRequest = {
  /**
   * The id of the function to call
   */
  functionId: string;
  appApiPublicV2FunctionsCallFunctionRequest:
    models.AppApiPublicV2FunctionsCallFunctionRequest;
};

/** @internal */
export const CallFunctionFunctionsFunctionIdCallPostRequest$inboundSchema:
  z.ZodType<
    CallFunctionFunctionsFunctionIdCallPostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    function_id: z.string(),
    app__api__public__v2__functions__CallFunctionRequest:
      models.AppApiPublicV2FunctionsCallFunctionRequest$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "function_id": "functionId",
      "app__api__public__v2__functions__CallFunctionRequest":
        "appApiPublicV2FunctionsCallFunctionRequest",
    });
  });

/** @internal */
export type CallFunctionFunctionsFunctionIdCallPostRequest$Outbound = {
  function_id: string;
  app__api__public__v2__functions__CallFunctionRequest:
    models.AppApiPublicV2FunctionsCallFunctionRequest$Outbound;
};

/** @internal */
export const CallFunctionFunctionsFunctionIdCallPostRequest$outboundSchema:
  z.ZodType<
    CallFunctionFunctionsFunctionIdCallPostRequest$Outbound,
    z.ZodTypeDef,
    CallFunctionFunctionsFunctionIdCallPostRequest
  > = z.object({
    functionId: z.string(),
    appApiPublicV2FunctionsCallFunctionRequest:
      models.AppApiPublicV2FunctionsCallFunctionRequest$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      functionId: "function_id",
      appApiPublicV2FunctionsCallFunctionRequest:
        "app__api__public__v2__functions__CallFunctionRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallFunctionFunctionsFunctionIdCallPostRequest$ {
  /** @deprecated use `CallFunctionFunctionsFunctionIdCallPostRequest$inboundSchema` instead. */
  export const inboundSchema =
    CallFunctionFunctionsFunctionIdCallPostRequest$inboundSchema;
  /** @deprecated use `CallFunctionFunctionsFunctionIdCallPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    CallFunctionFunctionsFunctionIdCallPostRequest$outboundSchema;
  /** @deprecated use `CallFunctionFunctionsFunctionIdCallPostRequest$Outbound` instead. */
  export type Outbound =
    CallFunctionFunctionsFunctionIdCallPostRequest$Outbound;
}

export function callFunctionFunctionsFunctionIdCallPostRequestToJSON(
  callFunctionFunctionsFunctionIdCallPostRequest:
    CallFunctionFunctionsFunctionIdCallPostRequest,
): string {
  return JSON.stringify(
    CallFunctionFunctionsFunctionIdCallPostRequest$outboundSchema.parse(
      callFunctionFunctionsFunctionIdCallPostRequest,
    ),
  );
}

export function callFunctionFunctionsFunctionIdCallPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CallFunctionFunctionsFunctionIdCallPostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CallFunctionFunctionsFunctionIdCallPostRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CallFunctionFunctionsFunctionIdCallPostRequest' from JSON`,
  );
}
