/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListKnowledgeBasesKnowledgeGetRequest = {
  /**
   * The offset to start the list from
   */
  offset?: number | undefined;
  /**
   * The number of knowledge bases to return
   */
  limit?: number | undefined;
};

/** @internal */
export const ListKnowledgeBasesKnowledgeGetRequest$inboundSchema: z.ZodType<
  ListKnowledgeBasesKnowledgeGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/** @internal */
export type ListKnowledgeBasesKnowledgeGetRequest$Outbound = {
  offset: number;
  limit: number;
};

/** @internal */
export const ListKnowledgeBasesKnowledgeGetRequest$outboundSchema: z.ZodType<
  ListKnowledgeBasesKnowledgeGetRequest$Outbound,
  z.ZodTypeDef,
  ListKnowledgeBasesKnowledgeGetRequest
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListKnowledgeBasesKnowledgeGetRequest$ {
  /** @deprecated use `ListKnowledgeBasesKnowledgeGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListKnowledgeBasesKnowledgeGetRequest$inboundSchema;
  /** @deprecated use `ListKnowledgeBasesKnowledgeGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListKnowledgeBasesKnowledgeGetRequest$outboundSchema;
  /** @deprecated use `ListKnowledgeBasesKnowledgeGetRequest$Outbound` instead. */
  export type Outbound = ListKnowledgeBasesKnowledgeGetRequest$Outbound;
}

export function listKnowledgeBasesKnowledgeGetRequestToJSON(
  listKnowledgeBasesKnowledgeGetRequest: ListKnowledgeBasesKnowledgeGetRequest,
): string {
  return JSON.stringify(
    ListKnowledgeBasesKnowledgeGetRequest$outboundSchema.parse(
      listKnowledgeBasesKnowledgeGetRequest,
    ),
  );
}

export function listKnowledgeBasesKnowledgeGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListKnowledgeBasesKnowledgeGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListKnowledgeBasesKnowledgeGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListKnowledgeBasesKnowledgeGetRequest' from JSON`,
  );
}
