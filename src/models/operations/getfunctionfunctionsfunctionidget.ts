/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFunctionFunctionsFunctionIdGetRequest = {
  /**
   * The id of the function to retrieve
   */
  functionId: string;
};

/** @internal */
export const GetFunctionFunctionsFunctionIdGetRequest$inboundSchema: z.ZodType<
  GetFunctionFunctionsFunctionIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  function_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "function_id": "functionId",
  });
});

/** @internal */
export type GetFunctionFunctionsFunctionIdGetRequest$Outbound = {
  function_id: string;
};

/** @internal */
export const GetFunctionFunctionsFunctionIdGetRequest$outboundSchema: z.ZodType<
  GetFunctionFunctionsFunctionIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetFunctionFunctionsFunctionIdGetRequest
> = z.object({
  functionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    functionId: "function_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFunctionFunctionsFunctionIdGetRequest$ {
  /** @deprecated use `GetFunctionFunctionsFunctionIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetFunctionFunctionsFunctionIdGetRequest$inboundSchema;
  /** @deprecated use `GetFunctionFunctionsFunctionIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetFunctionFunctionsFunctionIdGetRequest$outboundSchema;
  /** @deprecated use `GetFunctionFunctionsFunctionIdGetRequest$Outbound` instead. */
  export type Outbound = GetFunctionFunctionsFunctionIdGetRequest$Outbound;
}

export function getFunctionFunctionsFunctionIdGetRequestToJSON(
  getFunctionFunctionsFunctionIdGetRequest:
    GetFunctionFunctionsFunctionIdGetRequest,
): string {
  return JSON.stringify(
    GetFunctionFunctionsFunctionIdGetRequest$outboundSchema.parse(
      getFunctionFunctionsFunctionIdGetRequest,
    ),
  );
}

export function getFunctionFunctionsFunctionIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetFunctionFunctionsFunctionIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetFunctionFunctionsFunctionIdGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetFunctionFunctionsFunctionIdGetRequest' from JSON`,
  );
}
