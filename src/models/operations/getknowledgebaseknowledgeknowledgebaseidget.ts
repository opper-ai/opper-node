/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest = {
  /**
   * The id of the knowledge base to get
   */
  knowledgeBaseId: string;
};

/** @internal */
export const GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$inboundSchema:
  z.ZodType<
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    knowledge_base_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "knowledge_base_id": "knowledgeBaseId",
    });
  });

/** @internal */
export type GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$Outbound = {
  knowledge_base_id: string;
};

/** @internal */
export const GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$outboundSchema:
  z.ZodType<
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$Outbound,
    z.ZodTypeDef,
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest
  > = z.object({
    knowledgeBaseId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      knowledgeBaseId: "knowledge_base_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$ {
  /** @deprecated use `GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$inboundSchema;
  /** @deprecated use `GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$outboundSchema;
  /** @deprecated use `GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$Outbound` instead. */
  export type Outbound =
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$Outbound;
}

export function getKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequestToJSON(
  getKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest:
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest,
): string {
  return JSON.stringify(
    GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$outboundSchema.parse(
      getKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest,
    ),
  );
}

export function getKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetKnowledgeBaseKnowledgeKnowledgeBaseIdGetRequest' from JSON`,
  );
}
