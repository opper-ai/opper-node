/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListModelAliasesModelsAliasesGetRequest = {
  /**
   * The offset of the first alias to return
   */
  offset?: number | undefined;
  /**
   * The maximum number of aliases to return
   */
  limit?: number | undefined;
};

/** @internal */
export const ListModelAliasesModelsAliasesGetRequest$inboundSchema: z.ZodType<
  ListModelAliasesModelsAliasesGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/** @internal */
export type ListModelAliasesModelsAliasesGetRequest$Outbound = {
  offset: number;
  limit: number;
};

/** @internal */
export const ListModelAliasesModelsAliasesGetRequest$outboundSchema: z.ZodType<
  ListModelAliasesModelsAliasesGetRequest$Outbound,
  z.ZodTypeDef,
  ListModelAliasesModelsAliasesGetRequest
> = z.object({
  offset: z.number().int().default(0),
  limit: z.number().int().default(100),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListModelAliasesModelsAliasesGetRequest$ {
  /** @deprecated use `ListModelAliasesModelsAliasesGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListModelAliasesModelsAliasesGetRequest$inboundSchema;
  /** @deprecated use `ListModelAliasesModelsAliasesGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListModelAliasesModelsAliasesGetRequest$outboundSchema;
  /** @deprecated use `ListModelAliasesModelsAliasesGetRequest$Outbound` instead. */
  export type Outbound = ListModelAliasesModelsAliasesGetRequest$Outbound;
}

export function listModelAliasesModelsAliasesGetRequestToJSON(
  listModelAliasesModelsAliasesGetRequest:
    ListModelAliasesModelsAliasesGetRequest,
): string {
  return JSON.stringify(
    ListModelAliasesModelsAliasesGetRequest$outboundSchema.parse(
      listModelAliasesModelsAliasesGetRequest,
    ),
  );
}

export function listModelAliasesModelsAliasesGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ListModelAliasesModelsAliasesGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListModelAliasesModelsAliasesGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListModelAliasesModelsAliasesGetRequest' from JSON`,
  );
}
