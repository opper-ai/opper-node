/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTraceTracesTraceIdGetRequest = {
  /**
   * The id of the trace to get
   */
  traceId: string;
};

/** @internal */
export const GetTraceTracesTraceIdGetRequest$inboundSchema: z.ZodType<
  GetTraceTracesTraceIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  trace_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "trace_id": "traceId",
  });
});

/** @internal */
export type GetTraceTracesTraceIdGetRequest$Outbound = {
  trace_id: string;
};

/** @internal */
export const GetTraceTracesTraceIdGetRequest$outboundSchema: z.ZodType<
  GetTraceTracesTraceIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetTraceTracesTraceIdGetRequest
> = z.object({
  traceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    traceId: "trace_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTraceTracesTraceIdGetRequest$ {
  /** @deprecated use `GetTraceTracesTraceIdGetRequest$inboundSchema` instead. */
  export const inboundSchema = GetTraceTracesTraceIdGetRequest$inboundSchema;
  /** @deprecated use `GetTraceTracesTraceIdGetRequest$outboundSchema` instead. */
  export const outboundSchema = GetTraceTracesTraceIdGetRequest$outboundSchema;
  /** @deprecated use `GetTraceTracesTraceIdGetRequest$Outbound` instead. */
  export type Outbound = GetTraceTracesTraceIdGetRequest$Outbound;
}

export function getTraceTracesTraceIdGetRequestToJSON(
  getTraceTracesTraceIdGetRequest: GetTraceTracesTraceIdGetRequest,
): string {
  return JSON.stringify(
    GetTraceTracesTraceIdGetRequest$outboundSchema.parse(
      getTraceTracesTraceIdGetRequest,
    ),
  );
}

export function getTraceTracesTraceIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTraceTracesTraceIdGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTraceTracesTraceIdGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTraceTracesTraceIdGetRequest' from JSON`,
  );
}
