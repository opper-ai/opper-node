/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ListLanguageModelsResponse,
  ListLanguageModelsResponse$inboundSchema,
  ListLanguageModelsResponse$Outbound,
  ListLanguageModelsResponse$outboundSchema,
} from "./listlanguagemodelsresponse.js";
import {
  Meta,
  Meta$inboundSchema,
  Meta$Outbound,
  Meta$outboundSchema,
} from "./meta.js";

export type PaginatedResponseListLanguageModelsResponse = {
  meta: Meta;
  /**
   * List of items returned in the response
   */
  data: Array<ListLanguageModelsResponse>;
};

/** @internal */
export const PaginatedResponseListLanguageModelsResponse$inboundSchema:
  z.ZodType<
    PaginatedResponseListLanguageModelsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    meta: Meta$inboundSchema,
    data: z.array(ListLanguageModelsResponse$inboundSchema),
  });

/** @internal */
export type PaginatedResponseListLanguageModelsResponse$Outbound = {
  meta: Meta$Outbound;
  data: Array<ListLanguageModelsResponse$Outbound>;
};

/** @internal */
export const PaginatedResponseListLanguageModelsResponse$outboundSchema:
  z.ZodType<
    PaginatedResponseListLanguageModelsResponse$Outbound,
    z.ZodTypeDef,
    PaginatedResponseListLanguageModelsResponse
  > = z.object({
    meta: Meta$outboundSchema,
    data: z.array(ListLanguageModelsResponse$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginatedResponseListLanguageModelsResponse$ {
  /** @deprecated use `PaginatedResponseListLanguageModelsResponse$inboundSchema` instead. */
  export const inboundSchema =
    PaginatedResponseListLanguageModelsResponse$inboundSchema;
  /** @deprecated use `PaginatedResponseListLanguageModelsResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaginatedResponseListLanguageModelsResponse$outboundSchema;
  /** @deprecated use `PaginatedResponseListLanguageModelsResponse$Outbound` instead. */
  export type Outbound = PaginatedResponseListLanguageModelsResponse$Outbound;
}

export function paginatedResponseListLanguageModelsResponseToJSON(
  paginatedResponseListLanguageModelsResponse:
    PaginatedResponseListLanguageModelsResponse,
): string {
  return JSON.stringify(
    PaginatedResponseListLanguageModelsResponse$outboundSchema.parse(
      paginatedResponseListLanguageModelsResponse,
    ),
  );
}

export function paginatedResponseListLanguageModelsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PaginatedResponseListLanguageModelsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PaginatedResponseListLanguageModelsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PaginatedResponseListLanguageModelsResponse' from JSON`,
  );
}
