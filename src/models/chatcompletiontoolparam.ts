/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  FunctionDefinition,
  FunctionDefinition$inboundSchema,
  FunctionDefinition$Outbound,
  FunctionDefinition$outboundSchema,
} from "./functiondefinition.js";

export type ChatCompletionToolParam = {
  function: FunctionDefinition;
  type?: "function" | undefined;
};

/** @internal */
export const ChatCompletionToolParam$inboundSchema: z.ZodType<
  ChatCompletionToolParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  function: FunctionDefinition$inboundSchema,
  type: z.literal("function").default("function").optional(),
});

/** @internal */
export type ChatCompletionToolParam$Outbound = {
  function: FunctionDefinition$Outbound;
  type: "function";
};

/** @internal */
export const ChatCompletionToolParam$outboundSchema: z.ZodType<
  ChatCompletionToolParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionToolParam
> = z.object({
  function: FunctionDefinition$outboundSchema,
  type: z.literal("function").default("function" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolParam$ {
  /** @deprecated use `ChatCompletionToolParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionToolParam$inboundSchema;
  /** @deprecated use `ChatCompletionToolParam$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionToolParam$outboundSchema;
  /** @deprecated use `ChatCompletionToolParam$Outbound` instead. */
  export type Outbound = ChatCompletionToolParam$Outbound;
}

export function chatCompletionToolParamToJSON(
  chatCompletionToolParam: ChatCompletionToolParam,
): string {
  return JSON.stringify(
    ChatCompletionToolParam$outboundSchema.parse(chatCompletionToolParam),
  );
}

export function chatCompletionToolParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionToolParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionToolParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionToolParam' from JSON`,
  );
}
