/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ListCustomModelsResponseItem = {
  /**
   * The ID of the custom language model
   */
  id: string;
  /**
   * The name of the custom language model
   */
  name: string;
  /**
   * The identifier of the custom language model
   */
  identifier: string;
  /**
   * Extra metadata about the custom language model
   */
  extra?: { [k: string]: any } | undefined;
};

/** @internal */
export const ListCustomModelsResponseItem$inboundSchema: z.ZodType<
  ListCustomModelsResponseItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
});

/** @internal */
export type ListCustomModelsResponseItem$Outbound = {
  id: string;
  name: string;
  identifier: string;
  extra?: { [k: string]: any } | undefined;
};

/** @internal */
export const ListCustomModelsResponseItem$outboundSchema: z.ZodType<
  ListCustomModelsResponseItem$Outbound,
  z.ZodTypeDef,
  ListCustomModelsResponseItem
> = z.object({
  id: z.string(),
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomModelsResponseItem$ {
  /** @deprecated use `ListCustomModelsResponseItem$inboundSchema` instead. */
  export const inboundSchema = ListCustomModelsResponseItem$inboundSchema;
  /** @deprecated use `ListCustomModelsResponseItem$outboundSchema` instead. */
  export const outboundSchema = ListCustomModelsResponseItem$outboundSchema;
  /** @deprecated use `ListCustomModelsResponseItem$Outbound` instead. */
  export type Outbound = ListCustomModelsResponseItem$Outbound;
}

export function listCustomModelsResponseItemToJSON(
  listCustomModelsResponseItem: ListCustomModelsResponseItem,
): string {
  return JSON.stringify(
    ListCustomModelsResponseItem$outboundSchema.parse(
      listCustomModelsResponseItem,
    ),
  );
}

export function listCustomModelsResponseItemFromJSON(
  jsonString: string,
): SafeParseResult<ListCustomModelsResponseItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListCustomModelsResponseItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListCustomModelsResponseItem' from JSON`,
  );
}
