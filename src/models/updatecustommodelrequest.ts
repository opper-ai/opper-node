/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpdateCustomModelRequest = {
  /**
   * The name of the custom language model
   */
  name?: string | null | undefined;
  /**
   * The identifier of the custom language model
   */
  identifier?: string | null | undefined;
  /**
   * Extra metadata about the custom language model
   */
  extra?: { [k: string]: any } | null | undefined;
  /**
   * The API key of the custom language model
   */
  apiKey?: string | null | undefined;
};

/** @internal */
export const UpdateCustomModelRequest$inboundSchema: z.ZodType<
  UpdateCustomModelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  identifier: z.nullable(z.string()).optional(),
  extra: z.nullable(z.record(z.any())).optional(),
  api_key: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "api_key": "apiKey",
  });
});

/** @internal */
export type UpdateCustomModelRequest$Outbound = {
  name?: string | null | undefined;
  identifier?: string | null | undefined;
  extra?: { [k: string]: any } | null | undefined;
  api_key?: string | null | undefined;
};

/** @internal */
export const UpdateCustomModelRequest$outboundSchema: z.ZodType<
  UpdateCustomModelRequest$Outbound,
  z.ZodTypeDef,
  UpdateCustomModelRequest
> = z.object({
  name: z.nullable(z.string()).optional(),
  identifier: z.nullable(z.string()).optional(),
  extra: z.nullable(z.record(z.any())).optional(),
  apiKey: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    apiKey: "api_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCustomModelRequest$ {
  /** @deprecated use `UpdateCustomModelRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateCustomModelRequest$inboundSchema;
  /** @deprecated use `UpdateCustomModelRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateCustomModelRequest$outboundSchema;
  /** @deprecated use `UpdateCustomModelRequest$Outbound` instead. */
  export type Outbound = UpdateCustomModelRequest$Outbound;
}

export function updateCustomModelRequestToJSON(
  updateCustomModelRequest: UpdateCustomModelRequest,
): string {
  return JSON.stringify(
    UpdateCustomModelRequest$outboundSchema.parse(updateCustomModelRequest),
  );
}

export function updateCustomModelRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCustomModelRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCustomModelRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCustomModelRequest' from JSON`,
  );
}
