/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionFunctionMessageParam = {
  content: string | null;
  name: string;
  role?: "function" | undefined;
};

/** @internal */
export const ChatCompletionFunctionMessageParam$inboundSchema: z.ZodType<
  ChatCompletionFunctionMessageParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(z.string()),
  name: z.string(),
  role: z.literal("function").default("function").optional(),
});

/** @internal */
export type ChatCompletionFunctionMessageParam$Outbound = {
  content: string | null;
  name: string;
  role: "function";
};

/** @internal */
export const ChatCompletionFunctionMessageParam$outboundSchema: z.ZodType<
  ChatCompletionFunctionMessageParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionFunctionMessageParam
> = z.object({
  content: z.nullable(z.string()),
  name: z.string(),
  role: z.literal("function").default("function" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionFunctionMessageParam$ {
  /** @deprecated use `ChatCompletionFunctionMessageParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionFunctionMessageParam$inboundSchema;
  /** @deprecated use `ChatCompletionFunctionMessageParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionFunctionMessageParam$outboundSchema;
  /** @deprecated use `ChatCompletionFunctionMessageParam$Outbound` instead. */
  export type Outbound = ChatCompletionFunctionMessageParam$Outbound;
}

export function chatCompletionFunctionMessageParamToJSON(
  chatCompletionFunctionMessageParam: ChatCompletionFunctionMessageParam,
): string {
  return JSON.stringify(
    ChatCompletionFunctionMessageParam$outboundSchema.parse(
      chatCompletionFunctionMessageParam,
    ),
  );
}

export function chatCompletionFunctionMessageParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionFunctionMessageParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionFunctionMessageParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionFunctionMessageParam' from JSON`,
  );
}
