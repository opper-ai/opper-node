/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  FunctionDefinition,
  FunctionDefinition$inboundSchema,
  FunctionDefinition$Outbound,
  FunctionDefinition$outboundSchema,
} from "./functiondefinition.js";

export type ChatCompletionFunctionToolParam = {
  function: FunctionDefinition;
  type?: "function" | undefined;
};

/** @internal */
export const ChatCompletionFunctionToolParam$inboundSchema: z.ZodType<
  ChatCompletionFunctionToolParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  function: FunctionDefinition$inboundSchema,
  type: z.literal("function").default("function").optional(),
});

/** @internal */
export type ChatCompletionFunctionToolParam$Outbound = {
  function: FunctionDefinition$Outbound;
  type: "function";
};

/** @internal */
export const ChatCompletionFunctionToolParam$outboundSchema: z.ZodType<
  ChatCompletionFunctionToolParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionFunctionToolParam
> = z.object({
  function: FunctionDefinition$outboundSchema,
  type: z.literal("function").default("function" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionFunctionToolParam$ {
  /** @deprecated use `ChatCompletionFunctionToolParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionFunctionToolParam$inboundSchema;
  /** @deprecated use `ChatCompletionFunctionToolParam$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionFunctionToolParam$outboundSchema;
  /** @deprecated use `ChatCompletionFunctionToolParam$Outbound` instead. */
  export type Outbound = ChatCompletionFunctionToolParam$Outbound;
}

export function chatCompletionFunctionToolParamToJSON(
  chatCompletionFunctionToolParam: ChatCompletionFunctionToolParam,
): string {
  return JSON.stringify(
    ChatCompletionFunctionToolParam$outboundSchema.parse(
      chatCompletionFunctionToolParam,
    ),
  );
}

export function chatCompletionFunctionToolParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionFunctionToolParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionFunctionToolParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionFunctionToolParam' from JSON`,
  );
}
