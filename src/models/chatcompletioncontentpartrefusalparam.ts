/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionContentPartRefusalParam = {
  refusal: string;
  type?: "refusal" | undefined;
};

/** @internal */
export const ChatCompletionContentPartRefusalParam$inboundSchema: z.ZodType<
  ChatCompletionContentPartRefusalParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  refusal: z.string(),
  type: z.literal("refusal").default("refusal").optional(),
});

/** @internal */
export type ChatCompletionContentPartRefusalParam$Outbound = {
  refusal: string;
  type: "refusal";
};

/** @internal */
export const ChatCompletionContentPartRefusalParam$outboundSchema: z.ZodType<
  ChatCompletionContentPartRefusalParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionContentPartRefusalParam
> = z.object({
  refusal: z.string(),
  type: z.literal("refusal").default("refusal" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionContentPartRefusalParam$ {
  /** @deprecated use `ChatCompletionContentPartRefusalParam$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionContentPartRefusalParam$inboundSchema;
  /** @deprecated use `ChatCompletionContentPartRefusalParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionContentPartRefusalParam$outboundSchema;
  /** @deprecated use `ChatCompletionContentPartRefusalParam$Outbound` instead. */
  export type Outbound = ChatCompletionContentPartRefusalParam$Outbound;
}

export function chatCompletionContentPartRefusalParamToJSON(
  chatCompletionContentPartRefusalParam: ChatCompletionContentPartRefusalParam,
): string {
  return JSON.stringify(
    ChatCompletionContentPartRefusalParam$outboundSchema.parse(
      chatCompletionContentPartRefusalParam,
    ),
  );
}

export function chatCompletionContentPartRefusalParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionContentPartRefusalParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionContentPartRefusalParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionContentPartRefusalParam' from JSON`,
  );
}
