/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const Op = {
  Equal: "=",
  NotEqual: "!=",
  GreaterThan: ">",
  LessThan: "<",
  In: "in",
} as const;
export type Op = ClosedEnum<typeof Op>;

/** @internal */
export const Op$inboundSchema: z.ZodNativeEnum<typeof Op> = z.nativeEnum(Op);

/** @internal */
export const Op$outboundSchema: z.ZodNativeEnum<typeof Op> = Op$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Op$ {
  /** @deprecated use `Op$inboundSchema` instead. */
  export const inboundSchema = Op$inboundSchema;
  /** @deprecated use `Op$outboundSchema` instead. */
  export const outboundSchema = Op$outboundSchema;
}
