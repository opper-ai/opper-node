/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type GetDatasetEntriesResponse = {
  /**
   * The id of the dataset entry
   */
  id: string;
  /**
   * The input to the dataset entry
   */
  input: string;
  /**
   * The output to the dataset entry
   */
  output: string;
  /**
   * The expected output to the dataset entry, this is an optionally edited version of the output
   */
  expected?: string | null | undefined;
  /**
   * The comment to the dataset entry
   */
  comment?: string | null | undefined;
};

/** @internal */
export const GetDatasetEntriesResponse$inboundSchema: z.ZodType<
  GetDatasetEntriesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  input: z.string(),
  output: z.string(),
  expected: z.nullable(z.string()).optional(),
  comment: z.nullable(z.string()).optional(),
});

/** @internal */
export type GetDatasetEntriesResponse$Outbound = {
  id: string;
  input: string;
  output: string;
  expected?: string | null | undefined;
  comment?: string | null | undefined;
};

/** @internal */
export const GetDatasetEntriesResponse$outboundSchema: z.ZodType<
  GetDatasetEntriesResponse$Outbound,
  z.ZodTypeDef,
  GetDatasetEntriesResponse
> = z.object({
  id: z.string(),
  input: z.string(),
  output: z.string(),
  expected: z.nullable(z.string()).optional(),
  comment: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDatasetEntriesResponse$ {
  /** @deprecated use `GetDatasetEntriesResponse$inboundSchema` instead. */
  export const inboundSchema = GetDatasetEntriesResponse$inboundSchema;
  /** @deprecated use `GetDatasetEntriesResponse$outboundSchema` instead. */
  export const outboundSchema = GetDatasetEntriesResponse$outboundSchema;
  /** @deprecated use `GetDatasetEntriesResponse$Outbound` instead. */
  export type Outbound = GetDatasetEntriesResponse$Outbound;
}

export function getDatasetEntriesResponseToJSON(
  getDatasetEntriesResponse: GetDatasetEntriesResponse,
): string {
  return JSON.stringify(
    GetDatasetEntriesResponse$outboundSchema.parse(getDatasetEntriesResponse),
  );
}

export function getDatasetEntriesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetDatasetEntriesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDatasetEntriesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDatasetEntriesResponse' from JSON`,
  );
}
