/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  CustomOutput,
  CustomOutput$inboundSchema,
  CustomOutput$Outbound,
  CustomOutput$outboundSchema,
} from "./customoutput.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionMessageCustomToolCall = {
  id: string;
  custom: CustomOutput;
  type?: "custom" | undefined;
  additionalProperties?: { [k: string]: any };
};

/** @internal */
export const ChatCompletionMessageCustomToolCall$inboundSchema: z.ZodType<
  ChatCompletionMessageCustomToolCall,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    id: z.string(),
    custom: CustomOutput$inboundSchema,
    type: z.literal("custom").default("custom").optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
);

/** @internal */
export type ChatCompletionMessageCustomToolCall$Outbound = {
  id: string;
  custom: CustomOutput$Outbound;
  type: "custom";
  [additionalProperties: string]: unknown;
};

/** @internal */
export const ChatCompletionMessageCustomToolCall$outboundSchema: z.ZodType<
  ChatCompletionMessageCustomToolCall$Outbound,
  z.ZodTypeDef,
  ChatCompletionMessageCustomToolCall
> = z.object({
  id: z.string(),
  custom: CustomOutput$outboundSchema,
  type: z.literal("custom").default("custom" as const),
  additionalProperties: z.record(z.any()),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessageCustomToolCall$ {
  /** @deprecated use `ChatCompletionMessageCustomToolCall$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionMessageCustomToolCall$inboundSchema;
  /** @deprecated use `ChatCompletionMessageCustomToolCall$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionMessageCustomToolCall$outboundSchema;
  /** @deprecated use `ChatCompletionMessageCustomToolCall$Outbound` instead. */
  export type Outbound = ChatCompletionMessageCustomToolCall$Outbound;
}

export function chatCompletionMessageCustomToolCallToJSON(
  chatCompletionMessageCustomToolCall: ChatCompletionMessageCustomToolCall,
): string {
  return JSON.stringify(
    ChatCompletionMessageCustomToolCall$outboundSchema.parse(
      chatCompletionMessageCustomToolCall,
    ),
  );
}

export function chatCompletionMessageCustomToolCallFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionMessageCustomToolCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionMessageCustomToolCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionMessageCustomToolCall' from JSON`,
  );
}
