/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionContentPartTextParam = {
  text: string;
  type?: "text" | undefined;
};

/** @internal */
export const ChatCompletionContentPartTextParam$inboundSchema: z.ZodType<
  ChatCompletionContentPartTextParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string(),
  type: z.literal("text").default("text").optional(),
});

/** @internal */
export type ChatCompletionContentPartTextParam$Outbound = {
  text: string;
  type: "text";
};

/** @internal */
export const ChatCompletionContentPartTextParam$outboundSchema: z.ZodType<
  ChatCompletionContentPartTextParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionContentPartTextParam
> = z.object({
  text: z.string(),
  type: z.literal("text").default("text" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionContentPartTextParam$ {
  /** @deprecated use `ChatCompletionContentPartTextParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionContentPartTextParam$inboundSchema;
  /** @deprecated use `ChatCompletionContentPartTextParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionContentPartTextParam$outboundSchema;
  /** @deprecated use `ChatCompletionContentPartTextParam$Outbound` instead. */
  export type Outbound = ChatCompletionContentPartTextParam$Outbound;
}

export function chatCompletionContentPartTextParamToJSON(
  chatCompletionContentPartTextParam: ChatCompletionContentPartTextParam,
): string {
  return JSON.stringify(
    ChatCompletionContentPartTextParam$outboundSchema.parse(
      chatCompletionContentPartTextParam,
    ),
  );
}

export function chatCompletionContentPartTextParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionContentPartTextParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionContentPartTextParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionContentPartTextParam' from JSON`,
  );
}
