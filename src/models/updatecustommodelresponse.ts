/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpdateCustomModelResponse = {
  /**
   * The ID of the custom language model
   */
  id: string;
  /**
   * The name of the custom language model
   */
  name: string;
  /**
   * The identifier of the custom language model
   */
  identifier: string;
  /**
   * Extra metadata about the custom language model
   */
  extra?: { [k: string]: any } | undefined;
};

/** @internal */
export const UpdateCustomModelResponse$inboundSchema: z.ZodType<
  UpdateCustomModelResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
});

/** @internal */
export type UpdateCustomModelResponse$Outbound = {
  id: string;
  name: string;
  identifier: string;
  extra?: { [k: string]: any } | undefined;
};

/** @internal */
export const UpdateCustomModelResponse$outboundSchema: z.ZodType<
  UpdateCustomModelResponse$Outbound,
  z.ZodTypeDef,
  UpdateCustomModelResponse
> = z.object({
  id: z.string(),
  name: z.string(),
  identifier: z.string(),
  extra: z.record(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCustomModelResponse$ {
  /** @deprecated use `UpdateCustomModelResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateCustomModelResponse$inboundSchema;
  /** @deprecated use `UpdateCustomModelResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateCustomModelResponse$outboundSchema;
  /** @deprecated use `UpdateCustomModelResponse$Outbound` instead. */
  export type Outbound = UpdateCustomModelResponse$Outbound;
}

export function updateCustomModelResponseToJSON(
  updateCustomModelResponse: UpdateCustomModelResponse,
): string {
  return JSON.stringify(
    UpdateCustomModelResponse$outboundSchema.parse(updateCustomModelResponse),
  );
}

export function updateCustomModelResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCustomModelResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCustomModelResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCustomModelResponse' from JSON`,
  );
}
