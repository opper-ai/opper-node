/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChatCompletionAllowedToolsParam,
  ChatCompletionAllowedToolsParam$inboundSchema,
  ChatCompletionAllowedToolsParam$Outbound,
  ChatCompletionAllowedToolsParam$outboundSchema,
} from "./chatcompletionallowedtoolsparam.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionAllowedToolChoiceParam = {
  allowedTools: ChatCompletionAllowedToolsParam;
  type?: "allowed_tools" | undefined;
};

/** @internal */
export const ChatCompletionAllowedToolChoiceParam$inboundSchema: z.ZodType<
  ChatCompletionAllowedToolChoiceParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  allowed_tools: ChatCompletionAllowedToolsParam$inboundSchema,
  type: z.literal("allowed_tools").default("allowed_tools").optional(),
}).transform((v) => {
  return remap$(v, {
    "allowed_tools": "allowedTools",
  });
});

/** @internal */
export type ChatCompletionAllowedToolChoiceParam$Outbound = {
  allowed_tools: ChatCompletionAllowedToolsParam$Outbound;
  type: "allowed_tools";
};

/** @internal */
export const ChatCompletionAllowedToolChoiceParam$outboundSchema: z.ZodType<
  ChatCompletionAllowedToolChoiceParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionAllowedToolChoiceParam
> = z.object({
  allowedTools: ChatCompletionAllowedToolsParam$outboundSchema,
  type: z.literal("allowed_tools").default("allowed_tools" as const),
}).transform((v) => {
  return remap$(v, {
    allowedTools: "allowed_tools",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionAllowedToolChoiceParam$ {
  /** @deprecated use `ChatCompletionAllowedToolChoiceParam$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionAllowedToolChoiceParam$inboundSchema;
  /** @deprecated use `ChatCompletionAllowedToolChoiceParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionAllowedToolChoiceParam$outboundSchema;
  /** @deprecated use `ChatCompletionAllowedToolChoiceParam$Outbound` instead. */
  export type Outbound = ChatCompletionAllowedToolChoiceParam$Outbound;
}

export function chatCompletionAllowedToolChoiceParamToJSON(
  chatCompletionAllowedToolChoiceParam: ChatCompletionAllowedToolChoiceParam,
): string {
  return JSON.stringify(
    ChatCompletionAllowedToolChoiceParam$outboundSchema.parse(
      chatCompletionAllowedToolChoiceParam,
    ),
  );
}

export function chatCompletionAllowedToolChoiceParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionAllowedToolChoiceParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionAllowedToolChoiceParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionAllowedToolChoiceParam' from JSON`,
  );
}
