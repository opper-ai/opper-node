/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const Syntax = {
  Lark: "lark",
  Regex: "regex",
} as const;
export type Syntax = ClosedEnum<typeof Syntax>;

export type CustomFormatGrammarGrammar = {
  definition: string;
  syntax: Syntax;
};

/** @internal */
export const Syntax$inboundSchema: z.ZodNativeEnum<typeof Syntax> = z
  .nativeEnum(Syntax);

/** @internal */
export const Syntax$outboundSchema: z.ZodNativeEnum<typeof Syntax> =
  Syntax$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Syntax$ {
  /** @deprecated use `Syntax$inboundSchema` instead. */
  export const inboundSchema = Syntax$inboundSchema;
  /** @deprecated use `Syntax$outboundSchema` instead. */
  export const outboundSchema = Syntax$outboundSchema;
}

/** @internal */
export const CustomFormatGrammarGrammar$inboundSchema: z.ZodType<
  CustomFormatGrammarGrammar,
  z.ZodTypeDef,
  unknown
> = z.object({
  definition: z.string(),
  syntax: Syntax$inboundSchema,
});

/** @internal */
export type CustomFormatGrammarGrammar$Outbound = {
  definition: string;
  syntax: string;
};

/** @internal */
export const CustomFormatGrammarGrammar$outboundSchema: z.ZodType<
  CustomFormatGrammarGrammar$Outbound,
  z.ZodTypeDef,
  CustomFormatGrammarGrammar
> = z.object({
  definition: z.string(),
  syntax: Syntax$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFormatGrammarGrammar$ {
  /** @deprecated use `CustomFormatGrammarGrammar$inboundSchema` instead. */
  export const inboundSchema = CustomFormatGrammarGrammar$inboundSchema;
  /** @deprecated use `CustomFormatGrammarGrammar$outboundSchema` instead. */
  export const outboundSchema = CustomFormatGrammarGrammar$outboundSchema;
  /** @deprecated use `CustomFormatGrammarGrammar$Outbound` instead. */
  export type Outbound = CustomFormatGrammarGrammar$Outbound;
}

export function customFormatGrammarGrammarToJSON(
  customFormatGrammarGrammar: CustomFormatGrammarGrammar,
): string {
  return JSON.stringify(
    CustomFormatGrammarGrammar$outboundSchema.parse(customFormatGrammarGrammar),
  );
}

export function customFormatGrammarGrammarFromJSON(
  jsonString: string,
): SafeParseResult<CustomFormatGrammarGrammar, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomFormatGrammarGrammar$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomFormatGrammarGrammar' from JSON`,
  );
}
