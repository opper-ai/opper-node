/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ResponseFormatJSONObject = {
  type?: "json_object" | undefined;
};

/** @internal */
export const ResponseFormatJSONObject$inboundSchema: z.ZodType<
  ResponseFormatJSONObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("json_object").default("json_object").optional(),
});

/** @internal */
export type ResponseFormatJSONObject$Outbound = {
  type: "json_object";
};

/** @internal */
export const ResponseFormatJSONObject$outboundSchema: z.ZodType<
  ResponseFormatJSONObject$Outbound,
  z.ZodTypeDef,
  ResponseFormatJSONObject
> = z.object({
  type: z.literal("json_object").default("json_object" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFormatJSONObject$ {
  /** @deprecated use `ResponseFormatJSONObject$inboundSchema` instead. */
  export const inboundSchema = ResponseFormatJSONObject$inboundSchema;
  /** @deprecated use `ResponseFormatJSONObject$outboundSchema` instead. */
  export const outboundSchema = ResponseFormatJSONObject$outboundSchema;
  /** @deprecated use `ResponseFormatJSONObject$Outbound` instead. */
  export type Outbound = ResponseFormatJSONObject$Outbound;
}

export function responseFormatJSONObjectToJSON(
  responseFormatJSONObject: ResponseFormatJSONObject,
): string {
  return JSON.stringify(
    ResponseFormatJSONObject$outboundSchema.parse(responseFormatJSONObject),
  );
}

export function responseFormatJSONObjectFromJSON(
  jsonString: string,
): SafeParseResult<ResponseFormatJSONObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseFormatJSONObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseFormatJSONObject' from JSON`,
  );
}
