/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { OpperCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$analyticsGetUsage } from "./tools/analyticsGetUsage.js";
import { tool$call } from "./tools/call.js";
import { tool$datasetsCreateEntry } from "./tools/datasetsCreateEntry.js";
import { tool$datasetsDeleteEntry } from "./tools/datasetsDeleteEntry.js";
import { tool$datasetsEntriesUpdate } from "./tools/datasetsEntriesUpdate.js";
import { tool$datasetsGetEntry } from "./tools/datasetsGetEntry.js";
import { tool$datasetsListEntries } from "./tools/datasetsListEntries.js";
import { tool$datasetsQueryEntries } from "./tools/datasetsQueryEntries.js";
import { tool$embeddingsCreate } from "./tools/embeddingsCreate.js";
import { tool$functionsCall } from "./tools/functionsCall.js";
import { tool$functionsCallRevision } from "./tools/functionsCallRevision.js";
import { tool$functionsCreate } from "./tools/functionsCreate.js";
import { tool$functionsDelete } from "./tools/functionsDelete.js";
import { tool$functionsGet } from "./tools/functionsGet.js";
import { tool$functionsGetByName } from "./tools/functionsGetByName.js";
import { tool$functionsGetByRevision } from "./tools/functionsGetByRevision.js";
import { tool$functionsList } from "./tools/functionsList.js";
import { tool$functionsRevisionsList } from "./tools/functionsRevisionsList.js";
import { tool$functionsStream } from "./tools/functionsStream.js";
import { tool$functionsStreamRevision } from "./tools/functionsStreamRevision.js";
import { tool$functionsUpdate } from "./tools/functionsUpdate.js";
import { tool$knowledgeAdd } from "./tools/knowledgeAdd.js";
import { tool$knowledgeCreate } from "./tools/knowledgeCreate.js";
import { tool$knowledgeDelete } from "./tools/knowledgeDelete.js";
import { tool$knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete } from "./tools/knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete.js";
import { tool$knowledgeDeleteFile } from "./tools/knowledgeDeleteFile.js";
import { tool$knowledgeGet } from "./tools/knowledgeGet.js";
import { tool$knowledgeGetByName } from "./tools/knowledgeGetByName.js";
import { tool$knowledgeGetUploadUrl } from "./tools/knowledgeGetUploadUrl.js";
import { tool$knowledgeList } from "./tools/knowledgeList.js";
import { tool$knowledgeQuery } from "./tools/knowledgeQuery.js";
import { tool$knowledgeRegisterFileUpload } from "./tools/knowledgeRegisterFileUpload.js";
import { tool$languageModelsDeleteCustom } from "./tools/languageModelsDeleteCustom.js";
import { tool$languageModelsGetCustom } from "./tools/languageModelsGetCustom.js";
import { tool$languageModelsGetCustomByName } from "./tools/languageModelsGetCustomByName.js";
import { tool$languageModelsList } from "./tools/languageModelsList.js";
import { tool$languageModelsListCustom } from "./tools/languageModelsListCustom.js";
import { tool$languageModelsRegisterCustom } from "./tools/languageModelsRegisterCustom.js";
import { tool$languageModelsUpdateCustom } from "./tools/languageModelsUpdateCustom.js";
import { tool$modelsCreateModelAliasModelsAliasesPost } from "./tools/modelsCreateModelAliasModelsAliasesPost.js";
import { tool$modelsDeleteModelAliasModelsAliasesAliasIdDelete } from "./tools/modelsDeleteModelAliasModelsAliasesAliasIdDelete.js";
import { tool$modelsGetModelAliasByNameModelsAliasesByNameNameGet } from "./tools/modelsGetModelAliasByNameModelsAliasesByNameNameGet.js";
import { tool$modelsGetModelAliasModelsAliasesAliasIdGet } from "./tools/modelsGetModelAliasModelsAliasesAliasIdGet.js";
import { tool$modelsListModelAliasesModelsAliasesGet } from "./tools/modelsListModelAliasesModelsAliasesGet.js";
import { tool$modelsUpdateModelAliasModelsAliasesAliasIdPatch } from "./tools/modelsUpdateModelAliasModelsAliasesAliasIdPatch.js";
import { tool$openaiCreateChatCompletion } from "./tools/openaiCreateChatCompletion.js";
import { tool$spanMetricsCreateMetric } from "./tools/spanMetricsCreateMetric.js";
import { tool$spanMetricsDelete } from "./tools/spanMetricsDelete.js";
import { tool$spanMetricsGet } from "./tools/spanMetricsGet.js";
import { tool$spanMetricsList } from "./tools/spanMetricsList.js";
import { tool$spanMetricsUpdateMetric } from "./tools/spanMetricsUpdateMetric.js";
import { tool$spansCreate } from "./tools/spansCreate.js";
import { tool$spansDelete } from "./tools/spansDelete.js";
import { tool$spansGet } from "./tools/spansGet.js";
import { tool$spansSaveExamples } from "./tools/spansSaveExamples.js";
import { tool$spansUpdate } from "./tools/spansUpdate.js";
import { tool$stream } from "./tools/stream.js";
import { tool$tracesGet } from "./tools/tracesGet.js";
import { tool$tracesList } from "./tools/tracesList.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  httpBearer?: SDKOptions["httpBearer"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "Opper",
    version: "3.1.2",
  });

  const client = new OpperCore({
    httpBearer: deps.httpBearer,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$call);
  tool(tool$stream);
  tool(tool$knowledgeCreate);
  tool(tool$knowledgeList);
  tool(tool$knowledgeGet);
  tool(tool$knowledgeDelete);
  tool(tool$knowledgeGetByName);
  tool(tool$knowledgeGetUploadUrl);
  tool(tool$knowledgeRegisterFileUpload);
  tool(tool$knowledgeDeleteFile);
  tool(tool$knowledgeQuery);
  tool(tool$knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete);
  tool(tool$knowledgeAdd);
  tool(tool$tracesList);
  tool(tool$tracesGet);
  tool(tool$spansCreate);
  tool(tool$spansGet);
  tool(tool$spansUpdate);
  tool(tool$spansDelete);
  tool(tool$spansSaveExamples);
  tool(tool$spanMetricsCreateMetric);
  tool(tool$spanMetricsList);
  tool(tool$spanMetricsGet);
  tool(tool$spanMetricsUpdateMetric);
  tool(tool$spanMetricsDelete);
  tool(tool$datasetsCreateEntry);
  tool(tool$datasetsListEntries);
  tool(tool$datasetsGetEntry);
  tool(tool$datasetsDeleteEntry);
  tool(tool$datasetsQueryEntries);
  tool(tool$functionsCreate);
  tool(tool$functionsList);
  tool(tool$functionsGet);
  tool(tool$functionsUpdate);
  tool(tool$functionsDelete);
  tool(tool$functionsGetByName);
  tool(tool$functionsGetByRevision);
  tool(tool$functionsCall);
  tool(tool$functionsStream);
  tool(tool$functionsCallRevision);
  tool(tool$functionsStreamRevision);
  tool(tool$embeddingsCreate);
  tool(tool$languageModelsList);
  tool(tool$languageModelsRegisterCustom);
  tool(tool$languageModelsListCustom);
  tool(tool$languageModelsGetCustom);
  tool(tool$languageModelsUpdateCustom);
  tool(tool$languageModelsDeleteCustom);
  tool(tool$languageModelsGetCustomByName);
  tool(tool$modelsCreateModelAliasModelsAliasesPost);
  tool(tool$modelsListModelAliasesModelsAliasesGet);
  tool(tool$modelsGetModelAliasModelsAliasesAliasIdGet);
  tool(tool$modelsUpdateModelAliasModelsAliasesAliasIdPatch);
  tool(tool$modelsDeleteModelAliasModelsAliasesAliasIdDelete);
  tool(tool$modelsGetModelAliasByNameModelsAliasesByNameNameGet);
  tool(tool$openaiCreateChatCompletion);
  tool(tool$analyticsGetUsage);
  tool(tool$datasetsEntriesUpdate);
  tool(tool$functionsRevisionsList);

  return server;
}
