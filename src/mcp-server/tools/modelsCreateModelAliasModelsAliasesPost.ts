/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsCreateModelAliasModelsAliasesPost } from "../../funcs/modelsCreateModelAliasModelsAliasesPost.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: models.CreateModelAliasRequest$inboundSchema,
};

export const tool$modelsCreateModelAliasModelsAliasesPost: ToolDefinition<
  typeof args
> = {
  name: "models-create-model-alias-models-aliases-post",
  description: `Create Model Alias

Create a model alias with fallback models for the organization that owns the API key.

A model alias allows you to define a name that resolves to an ordered list of fallback models.
For example, you could create an alias called "sonnet-4" that falls back to
["anthropic/claude-3-5-sonnet-latest", "anthropic/claude-3-5-sonnet-20241022"].`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await modelsCreateModelAliasModelsAliasesPost(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
