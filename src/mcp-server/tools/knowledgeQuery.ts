/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { knowledgeQuery } from "../../funcs/knowledgeQuery.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  knowledgeBaseId: z.string(),
  queryKnowledgeBaseRequest: models.QueryKnowledgeBaseRequest$inboundSchema,
};

export const tool$knowledgeQuery: ToolDefinition<typeof args> = {
  name: "knowledge-query",
  description: `Query Knowledge Base

Query a knowledge base by its id`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await knowledgeQuery(
      client,
      args.knowledgeBaseId,
      args.queryKnowledgeBaseRequest,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
