/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { modelsUpdateModelAliasModelsAliasesAliasIdPatch } from "../../funcs/modelsUpdateModelAliasModelsAliasesAliasIdPatch.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  aliasId: z.string(),
  updateModelAliasRequest: models.UpdateModelAliasRequest$inboundSchema,
};

export const tool$modelsUpdateModelAliasModelsAliasesAliasIdPatch:
  ToolDefinition<typeof args> = {
    name: "models-update-model-alias-models-aliases-alias-id-patch",
    description: `Update Model Alias

Update a model alias.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await modelsUpdateModelAliasModelsAliasesAliasIdPatch(
          client,
          args.aliasId,
          args.updateModelAliasRequest,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
