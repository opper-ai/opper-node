/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete } from "../../funcs/knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete.js";
import * as models from "../../models/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  knowledgeBaseId: z.string(),
  deleteKnowledgeBaseRequest: z.nullable(
    models.DeleteKnowledgeBaseRequest$inboundSchema,
  ).optional(),
};

export const tool$knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete:
  ToolDefinition<typeof args> = {
    name: "knowledge-delete-documents-knowledge-knowledge-base-id-query-delete",
    description: `Delete Documents

Delete documents from a knowledge base based on filters`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await knowledgeDeleteDocumentsKnowledgeKnowledgeBaseIdQueryDelete(
          client,
          args.knowledgeBaseId,
          args.deleteKnowledgeBaseRequest,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
