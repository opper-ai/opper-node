/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { datasetsQueryEntries } from "../../funcs/datasetsQueryEntries.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  datasetId: z.string(),
  query: z.string(),
  limit: z.number().int().default(5),
};

export const tool$datasetsQueryEntries: ToolDefinition<typeof args> = {
  name: "datasets-query-entries",
  description: `Query Dataset Entries`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await datasetsQueryEntries(
      client,
      args.datasetId,
      args.query,
      args.limit,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
