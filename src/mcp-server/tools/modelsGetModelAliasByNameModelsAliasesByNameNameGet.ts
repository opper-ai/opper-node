/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { modelsGetModelAliasByNameModelsAliasesByNameNameGet } from "../../funcs/modelsGetModelAliasByNameModelsAliasesByNameNameGet.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  name: z.string(),
};

export const tool$modelsGetModelAliasByNameModelsAliasesByNameNameGet:
  ToolDefinition<typeof args> = {
    name: "models-get-model-alias-by-name-models-aliases-by-name-name-get",
    description: `Get Model Alias By Name

Get a model alias by its name.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await modelsGetModelAliasByNameModelsAliasesByNameNameGet(
          client,
          args.name,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
