name: Build and Publish

on:
  push:
    branches:
        - '**'
    tags:
        - v*
  pull_request:
    branches:
        - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Upload build artifact
        if: matrix.node-version == '21.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

      - name: Upload node_modules
        if: matrix.node-version == '21.x'
        uses: actions/upload-artifact@v4
        with:
          name: node-modules
          path: node_modules/  

  publish-npm:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
          scope: '@opperai'
      
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist/

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: node_modules/

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-github:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
      
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
